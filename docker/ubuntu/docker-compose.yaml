version: "3.9"
name: devels-playground-ubuntu
services:
  base:
    # user: god
    build:
      context: .
      target: dvlp_base-fs
      # args: 
      #   - _AGL_USR=$_AGL
      #   - _DVL_USR=$_DVL
    init: true
    volumes:
      # shared volumes but assign ownership
      # - repo_agl:/dvlw
      # - repo_dvl:/dvlw
      # - repo_god:/dvlw
      # - root:/fs/fs
      # - repo:/fs/dvlw
      # - root_god:/fs
      # - root_agl:/fs
      # - root_dvl:/fs
      - dls:/fs/dls
      - repo:/fs/dvlw
      # - home_agl:/fs/hal
      # - home_dvl:/fs/hel
      # - home_god:/fs/root/root
      # - dls:/fs/dls

      # command:
      # - /bin/bash
      # - -c
      # - export _AGL=agl
      # - export _HALO=${_HALO:-halo}
      # - sleep
      # - infinity
      # - ln -sf /home /mnt
      # - mkdir -p /mnt/data
      # - ln -sf /mnt/data /tmp/data
      # command: echo something
  base-god:
    # Need a user priviliged enough to chown
    # user: god
    # Specify the wings in question
    # group_add:
    #   - rootg
    #   - halo
    #   - hell
    build:
      context: .
      target: dvlp_base-fs_god
    depends_on:
      base:
        condition: service_completed_successfully
    init: true
    # volumes:
      # - repo:/fs/dvlw
    #   - root:/fs/root/root
  base-angel:
    # Need a user priviliged enough to chown
    # user: agl
    # Specify the wings in question
    # group_add:
    #   - halo
    build:
      context: .
      target: dvlp_base-fs_angel
    depends_on:
      base:
        condition: service_completed_successfully
    init: true
    # volumes:
    #   - home_agl:/fs/hal
  base-devel:
    # user: dvl
    # group_add:
    #   - hell
    build:
      context: .
      target: dvlp_base-fs_devel
    depends_on:
      base:
        # Wait for groups to be added
        condition: service_completed_successfully
    # volumes:
    #   - home_dvl:/fs/home/hel
    init: true
    # volumes:
    #   - home_dvl:/fs/hel
    # alias(es) for agl
    # base-ausr:
    #   user: _AGL_USR
    #   extends: base-angel
    #   build:
    #     context: .
    #     target: dvlp_base-fs_angel
    #     args:
    #       - _AGL_USR=${_AGL:-angel}
    #   volumes:
    #     - home_agl:/fs/home/${_AGL_USR}
    #   init: true
    # # alias(es) for dvl
    # base-daus:
    #   user: _DVL_USR
    #   extends: init-dvl
    #   build:
    #     context: .
    #     target: dvlp_base-fs_devel
    #     args:
    #       - _DVL_USR=${_DVL-:devel}
    #   volumes:
    #     - home_dvl:/fs/home/$_DVL_USR
  repo-lite:
    extends: base
    # user: god
    # group_add:
    #   - hell
    build:
      context: .
      target: dvlp_repo-lite
    volumes:
      # - repo:/fs/dvlw
      - repo-lite:/fs/dvlw
      # - root:/fs/fs
      # - root_god:/fs
      # - root_agl:/fs
      # - root_dvl:/fs
      # - dls:/fs/mnt/data/dls
    depends_on:
      base:
        # Wait for the ownership to change
        condition: service_completed_successfully
      base-god:
        # Wait for the ownership to change
        condition: service_completed_successfully
      base-angel:
        # Wait for the ownership to change
        condition: service_completed_successfully
      base-devel:
        # Wait for the ownership to change
        condition: service_completed_successfully
  
  repo:
    extends: base
    build:
      context: .
      target: dvlp_repo
    volumes: 
      - repo:/fs/dvlw
      # # init: true
      # volumes_from:
      #   - base-angel
      #   - base-devel
      # - repo_dvl:/hel/dvlw
      #   - root:/fs/hell
      #   - home_god:/fs/root:/fsro
      #   - root:/fs/home/god:rw
      #   - home_dvl:/fs/home/dvl
      #   # - home_dvl:/fs/home/devel
      #   # - home_dvl:/fs/home/${_DVL_USR:-dvl}
      #   # - home_agl:/fs/home/${_AGL_USR:-agl}
      #   # - home_agl:/fs/home/angel
      #   - home_agl:/fs/home/agl
      # - dls:/fs/dls
      #   - mnt-data:/fs/data
  skel-build-lite:
    extends: repo-lite
    # user: agl
    tty: false
    build:
      context: .
      args:
        - _AGL=agl
        - _HALO=halo
      # network: ${COMPOSE_PROJECT_NAME}_default
      # entrypoint: /bin/bash -c
      # # entrypoint: ["sudo chown -R agl:halo /home/agl/dvlw"]
      # command:
      #   - sudo chown -R agl:halo /hal
      #   - chown -R dvl:hell /hell
      # init: true
    volumes:
      - home_agl:/fs/hal
      - home_dvl:/fs/hel
      - home_god:/fs/root/root
      #   - home_dvl:/fs/home/dvl
      #   - home_agl:/fs/home/${_AGL:-agl}
      #   - mnt-data:/fs/mnt/data
      # depends_on:
      #   skel:
      #     # Wait for the ownership to change
      #     condition: service_started
      # volumes:
      #   - root:/fs/fs
      #   # - root:/fs/hell
      #   - home_god:/fs/home/god
      #   # - hell-data:/fs
      #   # - halo-data:/fs
      #   # # - home_dvl:/fs/home/${_DVL_USR:-dvl}
      #   - home_dvl:/fs/home/dvl
      #   # # - home_agl:/fs/home/${_AGL_USR:-agl}
      #   - home_agl:/fs/home/agl
      #   - repo_dvl:/home/dvl/dvlw
  skel-build:
    extends: repo
    volumes:
      - home_agl:/fs/hal
      - home_dvl:/fs/hel
      - home_god:/fs/root/root
    # volumes:
    #   - repo_agl:/home/agl/dvlw
    #   - repo_god:/home/god/dvlw
    labels:
      com.dvlp_skel.description: "-build skeleton"
  skel:
    user: god
    extends: repo
    entrypoint:
      - sleep
      - infinity
    volumes:
      - root:/fs/fs
      - home_agl:/fs/hal
      - home_dvl:/fs/hel
      - home_god:/fs/root/root
    # entrypoint: ["sudo chown -R agl:halo /home/agl/dvlw"]
    # command:
    # #   - sudo chown -R agl:halo /halo/hal/dvlw
    # #   - sudo chown -R dvl:hell /hell
    # #   # - sudo chown -R dvl:hell /hell
    #   - sleep infinity
    build:
      context: .
      target: dvlp_skel
      # depends_on:
      # bare:
      #   # Wait for the ownership to change
      #   condition: service_started
    # volumes:
      #   - halo-data:/halo
      #   - mnt-data:/fs/mnt/data
      #   # - home_dvl:/fs/home/${_DVL_USR:-dvl}
      #   - home_dvl:/fs/home/dvl
      #   # - home_agl:/fs/home/${_AGL_USR:-agl}
      #   - home_agl:/fs/home/agl
      #   - home_god:/fs/home/god
    labels:
      com.dvlp_skel.description: "skeleton"
  bare:
    # owner/group becomes owner of home_dvl volume
    user: r00t
    extends: skel
    restart: on-failure
    tty: true
    working_dir: /hel
    entrypoint: /bin/bash -c
    # entrypoint: ["sudo chown -R agl:halo /home/agl/dvlw"]
    command:
      - chroot /fs || chroot /fs 
    cap_add:
        - SYS_CHROOT
    privileged: true
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-bare
    # extends: skel
    build:
      context: .
      target: dvlp_bare
      args:
        - _AGL_USR=${_AGL:-agl}
        - mnt_data=${mnt_data:-/mnt/data}
        - CONFIG_FILE
    depends_on:
      base:
        # Wait for the ownership to change
        condition: service_completed_successfully
    init: true
    # entrypoint: ["sudo chown -R agl:halo /home/agl/dvlw"]
    # entrypoint: /bin/bash -c
    # # entrypoint: ["sudo chown -R agl:halo /home/agl/dvlw"]
    # # command:
    # #   # - sudo chown -R agl:halo /halo/hal/dvlw
    # #   # - chown -R dvl:hell 
    # #   # - sudo chown -R dvl:hell /hell
    # #   - sleep infinity
    # #   # - -c
    # #   # - sudo
    # #   # - chown 
    # #   # - -R 
    # #   # - agl:halo 
    # #   # - /halo/hal/dvlw
    volumes:
      - repo-lite:/fs/dvlw
      - repo-lite:/fs/halo/hal/dvlw
      - repo-lite:/fs/halo/dvlw
      - repo-lite:/fs/hal/dvlw
      - repo-lite:/fs/home/agl/dvlw

      - repo-lite:/fs/hell/hel/dvlw
      - repo-lite:/fs/hell/dvlw
      - repo-lite:/fs/hel/dvlw
      - repo-lite:/fs/home/dvl/dvlw

      - repo-lite:/fs/root/root/dvlw
      - repo-lite:/fs/root/dvlw
      - repo-lite:/fs/home/god/dvlw

      - root:/fs/fs
      - root:/fs/root
      - home_god:/fs/root/root
      - home_god:/fs/home/god

      - root:/fs/hell
      - home_dvl:/fs/hel
      - home_dvl:/fs/hell/hel
      - home_dvl:/fs/home/dvl

      - root:/fs/halo
      - home_agl:/fs/hal
      - home_agl:/fs/halo/hal
      - home_agl:/fs/home/agl

      - mnt-data:/fs/mnt/data

      - dls:/fs/mnt/data/dls

      - dls_god:/fs/dls
      - dls_god:/fs/root/dls
      - dls_god:/fs/root/root/dls
      - dls_god:/fs/home/god/dls

      - dls_agl:/fs/hal/dls
      - dls_agl:/fs/halo/dls
      - dls_agl:/fs/halo/hal/dls
      - dls_agl:/fs/home/agl/dls

      - dls_dvl:/fs/hel/dls
      - dls_dvl:/fs/hell/dls
      - dls_dvl:/fs/hell/hel/dls
      - dls_dvl:/fs/home/dvl/dls
    labels:
      com.devels-playground.description: "basics + git"
  git-lite:
    extends: bare
    #   # - sudo cp -rf /lib /usr /mnt /bin /opt /lib64 /tmp /home /sbin /media /etc /root /boot /var /fs
    #   - git config --global --add safe.directory /dvlw && (git submodule update --init --progress dvlp  ||     git submodule update --init --progress --force --rebase --  dvlp/kernels)
    # image: kindtek/${HUB_repo:-devels-playground}:ubuntu-git-lite
    # extends: skel
    build:
      context: .
      target: dvlp_git-lite
    # volumes:
    #   - repo-lite:/fs/dvlw
    #   - repo-lite:/fs/halo/hal/dvlw
    #   - repo-lite:/fs/halo/dvlw
    #   - repo-lite:/fs/hal/dvlw
    #   - repo-lite:/fs/home/agl/dvlw

    #   - repo-lite:/fs/hell/hel/dvlw
    #   - repo-lite:/fs/hell/dvlw
    #   - repo-lite:/fs/hel/dvlw
    #   - repo-lite:/fs/home/dvl/dvlw

    #   - repo-lite:/fs/root/root/dvlw
    #   - repo-lite:/fs/root/dvlw
    #   - repo-lite:/fs/home/god/dvlw
    labels:
      com.devels-playground.description: "basics + git"

  git:
    # owner/group becomes owner of home_dvl volume
    extends: git-lite
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-git
    # extends: skel
    build:
      context: .
      target: dvlp_git
    volumes:
      - repo:/fs/dvlw
      - repo:/fs/halo/hal/dvlw
      - repo:/fs/halo/dvlw
      - repo:/fs/hal/dvlw
      - repo:/fs/home/agl/dvlw

      - repo:/fs/hell/hel/dvlw
      - repo:/fs/hell/dvlw
      - repo:/fs/hel/dvlw
      - repo:/fs/home/dvl/dvlw

      - repo:/fs/root/root/dvlw
      - repo:/fs/root/dvlw
      - repo:/fs/home/god/dvlw
    labels:
      com.devels-playground.description: "basics + git"

  python-build:
    extends: bare
    build:
      context: .
      target: dvlp_python-build
    labels:
      com.devels-playground.description: "basics + git"
  python-build-lite:
    extends: bare
    build:
      context: .
      target: dvlp_python-build-lite
    depends_on:
      python-build:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"
  python-lite:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-py-lite
    build:
      context: .
      target: dvlp_python-lite
    depends_on:
      python-build:
        # Wait for the ownership to change
        condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  python:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-py
    build:
      context: .
      target: dvlp_python
    depends_on:
      python-build:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"
  msdot-lite:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-msdot-lite
    build:
      context: .
      target: dvlp_msdot-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell"
  msdot:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-msdot
    build:
      context: .
      target: dvlp_msdot
    labels:
      com.devels-playground.description: "basics + git + powerhell"
  dind:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-dind
    build:
      context: .
      target: dvlp_dind
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker"
  dind-lite:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-dind-lite
    build:
      context: .
      target: dvlp_dind-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  basic-wsl-kernel-builder:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-basic-wsl-kernel-builder
    build:
      context: .
      target: dvlp_basic-wsl-kernel-builder
      # args:
      #   - CONFIG_FILE=${CONFIG_FILE:-dvlw/dvlp/kernels/linux/x86/generic/.config_wsl0}
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  basic-wsl-zfs-kernel-builder:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:basic-wsl-zfs-kernel-builder
    build:
      context: .
      target: dvlp_basic-wsl-zfs-kernel-builder
      # args:
      #   - CONFIG_FILE=${CONFIG_FILE:-dvlw/dvlp/kernels/linux/x86/generic/.config_wsl0}
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  stable-wsl-zfs-kernel-builder:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:stable-wsl-zfs-kernel-builder
    build:
      context: .
      # target: dvlp_stable-wsl-zfs-kernel-builder
      # args:
      #   - CONFIG_FILE=${CONFIG_FILE:-dvlw/dvlp/kernels/linux/x86/generic/.config_wsl0}
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  latest-rc-wsl-zfs-kernel-builder:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:latest-rc-wsl-zfs-kernel-builder
    build:
      context: .
      target: dvlp_latest-rc-wsl-zfs-kernel-builder
      # args:
      #   - CONFIG_FILE=${CONFIG_FILE:-dvlw/dvlp/kernels/linux/x86/generic/.config_wsl0}
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  gui-lite:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-gui
    build:
      context: .
      target: dvlp_gui-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  gui:
    extends: bare
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-gui
    user: agl
    entrypoint:
      - /bin/bash
      - -c
      - bash /home/dvl/start-kde.sh
    build:
      context: .
      target: dvlp_gui
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  gui-plus:
    extends: gui-lite
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-gui-plus
    build:
      context: .
      target: dvlp_gui-plus
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  cuda:
    extends: gui-lite
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-cuda
    build:
      context: .
      target: dvlp_cuda
      args:
        - _AGL_USR=${_AGL:-agl}
      labels:
        com.dvlp_cuda.description: "basics + git + powerhell + docker + gui + cuda"

  cuda-plus:
    extends: gui-lite
    image: kindtek/${HUB_repo:-devels-playground}:ubuntu-cuda-plus
    build:
      context: .
      target: dvlp_cuda-plus
      args:
        - _AGL_USR=${_AGL:-agl}
      labels:
        com.dvlp_cuda.description: "basics + git + powerhell + docker + gui + cuda"
volumes:
  root:
  root_dvl:
  root_agl:
  root_god:

  mnt-data:

  dls:
  dls_dvl:
  dls_agl:
  dls_god:

  home_dvl:
  home_agl:
  home_god:

  repo:
  repo-lite:
  repo_agl:
  repo_dvl:
  repo_god:


networks:
  "${COMPOSE_PROJECT_NAME}_default":
    driver: overlay
    attachable: true
