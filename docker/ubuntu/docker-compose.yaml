version: "3.9"
name: devels-playground-ubuntu
services:
  repo-lite:
    build:
      target: dvlp_repo-lite
    volumes:
      - repo-lite:/dvlw
  repo:
    build:
      target: dvlp_repo
    volumes:
      - repo:/dvlw
  base:
    build:
      # target: dvlp_worlds
      context: .
      args:
        - _AGL=${_AGL_USR:-$_AGL}
        - _DVL=${_DVL_USR:-$_DVL}
        - _MNT=${_MNT:-/mnt/data}
        - CONFIG_FILE
    env_file:
      - .env
    # volumes:
    #   - dls:/dls
    init: true
    # init: true
    # depends_on:
    #   repo:
    #     condition: service_started
  base-r00t:
    extends: base
    build:
      target: dvlp_base-r00t-dirs
  base-angel:
    extends: base
    build:
      target: dvlp_base-angel-dirs
  base-devel:
    extends: base
    build:
      target: dvlp_base-devel-dirs
    # alias(es) for agl
    # base-ausr:
    #   user: ${_AGL_USR}
    #   extends: base-angel
    #   build:
    #     context: .
    #     target: dvlp_base-angel-dirs
    #     args:
    #       - _AGL=${_AGL_USR:-$_AGL}
    #   volumes:
    #     - home_agl:/home/${_AGL_USR}
    #   init: true
    # # alias(es) for dvl
    # base-daus:
    #   user: ${_DVL_USR}
    #   extends: init-dvl
    #   build:
    #     context: .
    #     target: dvlp_base-devel-dirs
    #     args:
    #       - _DVL_USR=${_DVL-:devel}
    #   volumes:
    #     - home_dvl:/home/$_DVL_USR

  skel-build:
    extends: base
    tty: false
    privileged: true
    cap_add:
      - AUDIT_WRITE
      - DAC_OVERRIDE
      - CHOWN
      - FSETID
      - FOWNER
      - MKNOD
      - NET_BIND_SERVICE
      - NET_RAW
      - SETGID
      - SETUID
      - SETFCAP
      - SETPCAP
      - SYS_CHROOT
    build:
      target: dvlp_skel-build
      args:
        - nix_bind_nix_src_user_dir=${LOGNAME:+/home/$LOGNAME}
        - nix_bind_win_src_user_dir=${USERNAME:+/mnt/c/users/$USERNAME}
        - win_bind_tgt_user_dir_r00t=${USERNAME:+/r00t/host_win}
        - win_bind_tgt_user_dir_g0d=${USERNAME:+/g0d/host_win}
        - win_bind_tgt_user_dir_agl=${USERNAME:+/halo/host_win}
        - win_bind_tgt_user_dir_dvl=${USERNAME:+/hell/host_win}:ro
        - nix_bind_tgt_user_dir_r00t=${LOGNAME:+/r00t/host_nix}
        - nix_bind_tgt_user_dir_g0d=${LOGNAME:+/g0d/host_nix}
        - nix_bind_tgt_user_dir_agl=${LOGNAME:+/halo/host_nix}
        - nix_bind_tgt_user_dir_dvl=${LOGNAME:+/hell/host_nix}:ro
      #  - bind_src_dir=${bind_win_src_user_dir:-/dev/null}
    volumes:
      - repo-lite:/dvlw
      - repo-lite:/r00t/dvlw
      - repo-lite:/home/r00t/dvlw
      - repo-lite:/hal/dvlw
      - repo-lite:/home/{${_AGL}/dvlw
      - repo-lite:/hel/dvlw
      - repo-lite:/home/${_DVL}/dvlw
      - mnt-data:/mnt/data
      - home_agl:/hal
      - home_agl:/home/${_AGL}
      - home_dvl:/hel
      - home_dvl:/home/${_DVL}
      - home_r00t:/r00t
      - home_r00t:/home/r00t
      - ${nix_bind_win_src_user_dir:-/dev/foo1/null}:${win_bind_tgt_user_dir_r00t:-/dev/bar1/null}
      - ${nix_bind_win_src_user_dir:-/dev/foo2/null}:${win_bind_tgt_user_dir_g0d:-/dev/bar2/null}
      - ${nix_bind_win_src_user_dir:-/dev/foo3/null}:${win_bind_tgt_user_dir_agl:-/dev/bar3/null}
      - ${nix_bind_win_src_user_dir:-/dev/foo4/null}:${win_bind_tgt_user_dir_dvl:-/dev/bar4/null}
      - ${nix_bind_nix_src_user_dir:-/dev/foo5/null}:${nix_bind_tgt_user_dir_r00t:-/dev/bar5/null}
      - ${nix_bind_nix_src_user_dir:-/dev/foo6/null}:${nix_bind_tgt_user_dir_g0d:-/dev/bar6/null}
      - ${nix_bind_nix_src_user_dir:-/dev/foo7/null}:${nix_bind_tgt_user_dir_agl:-/dev/bar7/null}
      - ${nix_bind_nix_src_user_dir:-/dev/foo8/null}:${nix_bind_tgt_user_dir_dvl:-/dev/bar8/null}

    depends_on:
      base:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.dvlp_skel-kernel.description: "-build skeleton"

  skel-build-kernel:
    extends: base
    tty: false
    privileged: true
    cap_add:
      - AUDIT_WRITE
      - DAC_OVERRIDE
      - CHOWN
      - FSETID
      - FOWNER
      - MKNOD
      - NET_BIND_SERVICE
      - NET_RAW
      - SETGID
      - SETUID
      - SETFCAP
      - SETPCAP
      - SYS_CHROOT
    build:
      target: dvlp_skel-build-kernel
      args:
        - nix_bind_nix_src_user_dir=${LOGNAME:+/home/$LOGNAME}
        - nix_bind_win_src_user_dir=${USERNAME:+/mnt/c/users/$USERNAME}
        - win_bind_tgt_user_dir_r00t=${USERNAME:+/r00t/host_win}
        - win_bind_tgt_user_dir_g0d=${USERNAME:+/g0d/host_win}
        - win_bind_tgt_user_dir_agl=${USERNAME:+/halo/host_win}
        - win_bind_tgt_user_dir_dvl=${USERNAME:+/hell/host_win}:ro
        - nix_bind_tgt_user_dir_r00t=${LOGNAME:+/r00t/host_nix}
        - nix_bind_tgt_user_dir_g0d=${LOGNAME:+/g0d/host_nix}
        - nix_bind_tgt_user_dir_agl=${LOGNAME:+/halo/host_nix}
        - nix_bind_tgt_user_dir_dvl=${LOGNAME:+/hell/host_nix}:ro
      #  - bind_src_dir=${bind_win_src_user_dir:-/dev/null}

    volumes:
      - repo:/dvlw
      - repo:/r00t/dvlw
      - repo:/home/r00t/dvlw
      - repo:/hal/dvlw
      - repo:/home/{${_AGL}/dvlw
      - repo:/hel/dvlw
      - repo:/home/${_DVL}/dvlw
      - mnt-data:/mnt/data
      - home_agl:/hal
      - home_agl:/home/${_AGL}
      - home_dvl:/hel
      - home_dvl:/home/${_DVL}
      - home_r00t:/r00t
      - home_r00t:/home/r00t
      - ${nix_bind_win_src_user_dir:-/dev/foo1/null}:${win_bind_tgt_user_dir_r00t:-/dev/bar1/null}
      - ${nix_bind_win_src_user_dir:-/dev/foo2/null}:${win_bind_tgt_user_dir_g0d:-/dev/bar2/null}
      - ${nix_bind_win_src_user_dir:-/dev/foo3/null}:${win_bind_tgt_user_dir_agl:-/dev/bar3/null}
      - ${nix_bind_win_src_user_dir:-/dev/foo4/null}:${win_bind_tgt_user_dir_dvl:-/dev/bar4/null}
      - ${nix_bind_nix_src_user_dir:-/dev/foo5/null}:${nix_bind_tgt_user_dir_r00t:-/dev/bar5/null}
      - ${nix_bind_nix_src_user_dir:-/dev/foo6/null}:${nix_bind_tgt_user_dir_g0d:-/dev/bar6/null}
      - ${nix_bind_nix_src_user_dir:-/dev/foo7/null}:${nix_bind_tgt_user_dir_agl:-/dev/bar7/null}
      - ${nix_bind_nix_src_user_dir:-/dev/foo8/null}:${nix_bind_tgt_user_dir_dvl:-/dev/bar8/null}
    depends_on:
      base:
        # Wait for the ownership to change
        condition: service_completed_successfully

    labels:
      com.dvlp_skel-kernel.description: "-build skeleton"
  skel-kernel:
    # user: ${_AGL}
    extends: skel-build-kernel
    working_dir: /hel
    build:
      target: dvlp_skel-kernel
    depends_on:
      skel-build-kernel:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.dvlp_skel-kernel.description: "skeleton"
  base-bare:
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
    # user: ${_AGL}
    extends: skel-build
    working_dir: /hel
    restart: on-failure
    tty: true
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-bare
    build:
      context: .
      target: dvlp_base-bare
    depends_on:
      skel-build:
        # Wait for the ownership to change
        condition: service_completed_successfully
    init: true

    labels:
      com.devels-playground.description: "basics + git"
  base-git-lite:
    extends: base-bare
    build:
      context: .
      target: dvlp_base-git-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-git-lite
    labels:
      com.devels-playground.description: "basics + git"

  base-git:
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
    # user: ${_AGL}
    extends: skel-kernel
    working_dir: /hel
    restart: on-failure
    tty: true
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-git
    # extends: skel-kernel
    build:
      context: .
      target: dvlp_base-git
    depends_on:
      skel-kernel:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"

  base-python-build:
    extends: skel-build
    build:
      context: .
      target: dvlp_base-python-build
    labels:
      com.devels-playground.description: "basics + git"
  base-python-build-lite:
    extends: skel-build
    build:
      context: .
      target: dvlp_base-python-build-lite
    depends_on:
      base-python-build:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"
  base-python-lite:
    extends: base-git-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-py-lite
    build:
      context: .
      target: dvlp_base-python-lite
    depends_on:
      base-python-build:
        # Wait for the ownership to change
        condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  base-python:
    extends: base-git-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-py
    build:
      context: .
      target: dvlp_base-python
    depends_on:
      base-python-build:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"
  base-msdot-lite:
    extends: base-git-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-msdot-lite
    build:
      context: .
      target: dvlp_base-msdot-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell"
  base-msdot:
    extends: base-git-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-msdot
    build:
      context: .
      target: dvlp_base-msdot
    labels:
      com.devels-playground.description: "basics + git + powerhell"
  base-dind:
    extends: base-git-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-dind
    build:
      context: .
      target: dvlp_base-dind
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker"
  base-dind-lite:
    extends: base-git-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-dind-lite
    build:
      context: .
      target: dvlp_base-dind-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  base-kernel-builder:
    extends: base-git
    image: kindtek/${HUB_REPO:-devels-playground}:kernel-builder
    build:
      context: .
      target: dvlp_base-kernel-builder
      # args:
      #   - CONFIG_FILE=${CONFIG_FILE:-dvlw/dvlp/kernels/linux/x86/generic/.config_wsl0}
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  # basic-wsl-zfs-kernel-builder:
  #   extends: bare
  #   image: kindtek/${HUB_REPO:-devels-playground}:basic-wsl-zfs-kernel-builder
  #   build:
  #     context: .
  #     target: dvlp_basic-wsl-zfs-kernel-builder
  #     # args:
  #     #   - CONFIG_FILE=${CONFIG_FILE:-dvlw/dvlp/kernels/linux/x86/generic/.config_wsl0}
  #   labels:
  #     com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  # stable-wsl-zfs-kernel-builder:
  #   extends: bare
  #   image: kindtek/${HUB_REPO:-devels-playground}:stable-wsl-zfs-kernel-builder
  #   build:
  #     context: .
  #     # target: dvlp_stable-wsl-zfs-kernel-builder
  #     # args:
  #     #   - CONFIG_FILE=${CONFIG_FILE:-dvlw/dvlp/kernels/linux/x86/generic/.config_wsl0}
  #   labels:
  #     com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  # latest-rc-wsl-zfs-kernel-builder:
  #   extends: bare
  #   image: kindtek/${HUB_REPO:-devels-playground}:latest-rc-wsl-zfs-kernel-builder
  #   build:
  #     context: .
  #     target: dvlp_latest-rc-wsl-zfs-kernel-builder
  #     # args:
  #     #   - CONFIG_FILE=${CONFIG_FILE:-dvlw/dvlp/kernels/linux/x86/generic/.config_wsl0}
  #   labels:
  #     com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  base-gui-lite:
    extends: base-git-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-gui
    build:
      context: .
      target: dvlp_base-gui-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  base-gui:
    extends: base-git-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-gui
    # user: ${_AGL}
    # entrypoint:
    #   - /bin/bash
    #   - -c
    #   - bash /home/${_DVL}/start-kde.sh
    # entrypoint: /bin/bash -c
    # command: bash /home/${_AGL}/start-kde.sh
    build:
      context: .
      target: dvlp_base-gui
      args:
        - _AGL=${_AGL_USR:-$_AGL}
        - _DVL=${_DVL_USR:-$_DVL}
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  base-gui-plus:
    extends: base-git
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-gui-plus
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  base-cuda:
    extends: base-gui
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-cuda
    build:
      context: .
      target: dvlp_base-cuda
      labels:
        com.devels-playground.description: "basics + git + powerhell + docker + gui + cuda"
  base-cuda-plus:
    extends: base-gui-plus
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-base-cuda-plus
    build:
      context: .
      target: dvlp_base-cuda-plus
      labels:
        com.devels-playground.description: "basics + git + powerhell + docker + gui + cuda"
  worlds-skel-kernel:
    build:
      context: .
      target: dvlp_worlds-skel-kernel
      args:
        - _AGL=${_AGL_USR:-$_AGL}
        - _DVL=${_DVL_USR:-$_DVL}
      labels:
        com.devels-playground.description: "hello world"
    volumes:
      - world_hell:/hell
      - world_halo:/halo
      #     target: dvlp_worlds-bare
  worlds:
    user: ${_AGL}
    working_dir: /halo/hal
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-${WORLDS:-bare}
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
    build:
      context: .
      target: dvlp_worlds-${WORLDS:-bare}
      args:
        - WORLDS=bare
        - _AGL=${_AGL_USR:-$_AGL}
        - _DVL=${_DVL_USR:-$_DVL}
      labels:
        com.devels-playground.description: "hello worlds"
    volumes:
      - world_hell:/hell
      - world_halo:/halo
      - world_hell:/g0d/hell
      - world_halo:/g0d/halo
      - world_g0d:/g0d/r00t
      - world_hell:/r00t/hell
      - world_halo:/r00t/halo
      - world_halo:/g0d/r00t/halo
      - world_hell:/g0d/r00t/hell
      - repo:/dvlw
      - repo:/g0d/dvlw
      - repo:/g0d/hell/hel/dvlw
      - repo:/g0d/halo/hal/dvlw
      - repo:/r00t/dvlw
      - repo:/r00t/hell/dvlw
      - repo:/r00t/hell/hel/dvlw
      - repo:/r00t/halo/dvlw
      - repo:/r00t/halo/hal/dvlw
      - repo:/hell/dvlw
      - repo:/halo/dvlw
      - repo:/hell/hel/dvlw
      - repo:/halo/hal/dvlw
      - repo:/hel/dvlw
      - repo:/hal/dvlw
      - mnt-data:/mnt/data
      - mnt-data:/hell/mnt/data
      - mnt-data:/halo/mnt/data
      - mnt-data:/g0d/mnt/data
      - mnt-data:/r00t/mnt/data
      - world_old_hell:/g0d/zzz.hell
      - world_old_halo:/g0d/zzz.halo
      - world_old_r00t:/g0d/zzz.r00t
      - world_old_hell:/r00t/zzz.hell
      - world_old_halo:/r00t/zzz.halo
      - home_agl:/halo/hal
      - home_dvl:/hell/hel
      - home_agl:/hal
      - home_agl:/home/${_AGL}
      - home_dvl:/hel
      - home_dvl:/home/${_DVL}
    depends_on:
      worlds-skel-kernel:
        condition: service_completed_successfully
  worlds-lite:
    user: ${_AGL}
    working_dir: /r00t/halo/hal
    extends: worlds
    volumes:
      - repo-lite:/dvlw
      - repo-lite:/g0d/dvlw
      - repo-lite:/g0d/hell/hel/dvlw
      - repo-lite:/g0d/halo/hal/dvlw
      - repo-lite:/r00t/dvlw
      - repo-lite:/r00t/hell/dvlw
      - repo-lite:/r00t/hell/hel/dvlw
      - repo-lite:/r00t/halo/dvlw
      - repo-lite:/r00t/halo/hal/dvlw
      - repo-lite:/hell/dvlw
      - repo-lite:/halo/dvlw
      - repo-lite:/hell/hel/dvlw
      - repo-lite:/halo/hal/dvlw
      - repo-lite:/hel/dvlw
      - repo-lite:/hal/dvlw
  bare:
    extends: worlds-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-bare
    build:
      target: dvlp_bare
      args:
        - WORLDS=bare
  git-lite:
    extends: worlds-lite
    working_dir: /r00t/halo/hal
    # entrypoint: /bin/bash -c
    # command: "if [ -f \"start-kde.sh\" ]; then bash start.sh; fi; && sleep infinity;"
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-git-lite
    build:
      target: dvlp_git-lite
      args:
        - WORLDS=git-lite
  git:
    extends: worlds
    entrypoint: /bin/bash -c
    # command: 
    # - sleep infinity
    # command: "if [ -f 'start-kde.sh'' ]; then bash start.sh; fi; && sleep infinity;"
    # - "if [ -f \"start-kde.sh\" ]; then bash start.sh; mv -vf start-kde.sh start.sh; else bash start.sh; fi; && sleep infinity;"
    # - ["if [ -f \"start-kde.sh\" ]; then bash start.sh; mv -vf start-kde.sh start.sh; else bash start.sh; fi;", "sleep infinity"]
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-git
    build:
      target: dvlp_git
      args:
        - WORLDS=git
  python-lite:
    extends: worlds-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-python-lite
    build:
      target: dvlp_python-lite
      args:
        - WORLDS=python-lite
  dind-lite:
    extends: worlds-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-dind-lite
    build:
      target: dvlp_dind-lite
      args:
        - WORLDS=dind-lite
  msdot-lite:
    extends: worlds-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-msdot-lite
    build:
      target: dvlp_msdot-lite
      args:
        - WORLDS=msdot-lite
  gui-lite:
    extends: worlds-lite
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-gui-lite
    # command: bash start.sh && mv -fv start-kde.sh || export FIRST_LOGIN=false
    build:
      target: dvlp_gui-lite
      args:
        - WORLDS=gui-lite
  gui-plus:
    # user: ${_AGL}
    working_dir: /r00t/halo/hal
    extends: worlds
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-gui-plus
    # command: bash start-kde.sh
    build:
      target: dvlp_gui-plus
      args:
        - WORLDS=gui-plus
  gui:
    extends: gui-plus
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-gui
    # command: bash start-kde.sh
    build:
      target: dvlp_gui
      args:
        - WORLDS=gui
    volumes_from:
      - worlds-lite
  cuda:
    extends: gui-plus
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-cuda
    # command: bash start-kde.sh
    build:
      target: dvlp_cuda
      args:
        - WORLDS=cuda
    volumes_from:
      - worlds-lite
  cuda-plus:
    extends: cuda
    image: kindtek/${HUB_REPO:-devels-playground}:ubuntu-cuda-plus
    # command: bash start-kde.sh
    build:
      target: dvlp_cuda-plus
      args:
        - WORLDS=cuda-plus
    volumes_from:
      - worlds

volumes:
  root:
  root_dvl:
  root_agl:
  root_r00t:

  mnt-data:

  dls:
  dls_dvl:
  dls_agl:
  dls_r00t:

  home_dvl:
  home_agl:
  home_r00t:

  repo:
  repo-lite:
  repo_agl:
  repo_dvl:
  repo_r00t:

  world_hell:
  world_halo:
  world_r00t:
  world_g0d:
  world_old_hell:
  world_old_halo:
  world_old_r00t:

  host_win:
  host_nix:
    # host_mac:

networks:
  "${COMPOSE_PROJECT_NAME}_default":
    driver: overlay
    attachable: true
