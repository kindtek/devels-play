version: "3.9"
name: dvl-playg-ubuntu
services:

  init:
    # Need a user priviliged enough to chown
    build:
      context: .
      target: dvlp_init
    init: true
    command:
      - bin/bash
      - -c
      - export _AGL=${_AGL:-agl}
      - export _HALOS=${_HALOS:-halos}
      - ln -s /home/${_AGL:-agl} /tmp/${_AGL:-agl}
      - ln -s /home/dvl /tmp/dvl
      - mkdir -p /mnt/data
      - ln -s /mnt/data /tmp/data
    # command: echo something

  init-hal:
    # Need a user priviliged enough to chown
    user: ${_AGL:-agl}
    # Specify the wings in question
    group_add:
      - ${_HALOS:-halos}
    build:
      context: .
      target: dvlp_hal
    depends_on:
      init:
        # Wait for the groups to be added
        condition: service_completed_successfully
    init: true
    volumes:
      - hal-data:/tmp/${_AGL:-agl}
    command: sudo chown -R ${_AGL:-agl}:${_HALOS:-halos} /tmp/${_AGL:-agl}

  init-hel:
    # Need a user priviliged enough to chown
    user: dvl
    # Specify the wings in question
    group_add:
      - horns
    build:
      context: .
      target: dvlp_hel
    depends_on:
      init:
        # Wait for groups to be added
        condition: service_completed_successfully
    init: true
    volumes:
      - hel-data:/tmp/dvl
    command: chown -R dvl:horns /tmp/dvl

  data:
    user: ${_AGL:-agl}
    group_add:
      - ${_HALOS:-halos}
    build:
      context: .
      target: dvlp_data
    depends_on:
      init-hel:
        # Wait for the ownership to change
        condition: service_completed_successfully
      init-hal:
        # Wait for the ownership to change
        condition: service_completed_successfully
    init: true
    volumes:
      - mnt-data:/tmp/data
  skel:
    extends: data
    user: ${_AGL:-agl}
    build:
      context: .
      target: dvlp_skel
      args:
        - _AGL=${_AGL:-agl}
        - _HALOS=${_HALOS:-halos}
      # network: ${COMPOSE_PROJECT_NAME}_default
    init: true
    volumes:
      - hel-data:/home/dvl
      - hal-data:/home/${_AGL:-agl}
      - mnt-data:/mnt/data
    depends_on:
      data:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.dvlp_skel.description: "skeleton"

  git:
    # owner/group becomes owner of hel-data volume
    extends: data
    user: dvl
    privileged: true
    entrypoint:
      - sleep
      - infinity
    image: kindtek/dvlp:ubuntu-git
    # extends: skel
    build:
      context: .
      target: dvlp_git
      args:
        - _AGL=${_AGL:-agl}
    depends_on:
      init-hel:
        # Wait for the ownership to change
        condition: service_completed_successfully
      init-hal:
        # Wait for the ownership to change
        condition: service_completed_successfully
      data:
        # Wait for the ownership to change
        condition: service_completed_successfully
    volumes:
      - hel-data:/home/dvl
      - hal-data:/home/${_AGL:-agl}
      - /mnt/data
    labels:
      com.dvl-playg.description: "basics + git"

  python:
    extends: git
    image: kindtek/dvlp:ubuntu-py
    build:
      context: .
      target: dvlp_python
    labels:
      com.dvl-playg.description: "basics + git + powerhell"

  msdot:
    extends: git
    image: kindtek/dvlp:ubuntu-msdot
    build:
      context: .
      target: dvlp_msdot
    labels:
      com.dvl-playg.description: "basics + git + powerhell"

  dind:
    extends: git
    image: kindtek/dvlp:ubuntu-dind
    build:
      context: .
      target: dvlp_dind
    labels:
      com.dvl-playg.description: "basics + git + powerhell + docker"

  kernel:
    extends: git
    image: kindtek/dvlp:ubuntu-kernel
    build:
      context: .
      target: dvlp_kernel
    labels:
      com.dvl-playg.description: "basics + git + powerhell + docker + kernel"

  kernel_phat:
    extends: git
    image: kindtek/dvlp:ubuntu-kernel-phat
    build:
      context: .
      target: dvlp_kernel-phat
    labels:
      com.dvl-playg.description: "basics + git + powerhell + docker + kernel"

  gui:
    extends: git
    image: kindtek/dvlp:ubuntu-gui
    build:
      context: .
      target: dvlp_gui
    labels:
      com.dvl-playg.description: "basics + git + powerhell + docker + kernel + gui"

  gui_phat:
    extends: git
    image: kindtek/dvlp:ubuntu-gui-phat
    build:
      context: .
      target: dvlp_gui-phat
    labels:
      com.dvl-playg.description: "basics + git + powerhell + docker + kernel + gui"
  # cuda:
  #   extends: gui
  #   image: kindtek/dvlp:ubuntu-cuda
  #   build:
  #     context: .
  #     target: dvlp_cuda
  #     args:
  #       - _AGL=${_AGL:-agl}
  #     labels:
  #       com.dvlp_cuda.description: "basics + git + powerhell + docker + gui + cuda"

  # cuda_phat:
  #   extends: gui
  #   image: kindtek/dvlp:ubuntu-cuda-phat
  #   build:
  #     context: .
  #     target: dvlp_cuda-phat
  #     args:
  #       - _AGL=${_AGL:-agl}
  #     labels:
  #       com.dvlp_cuda.description: "basics + git + powerhell + docker + gui + cuda"

volumes:
  hel-data:
  hal-data:
  mnt-data:


networks:
  "${COMPOSE_PROJECT_NAME}_default":
    driver: overlay
    attachable: true
