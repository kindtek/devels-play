version: "3.9"
name: devels-playground-kali
services:
  template:
    build:
      context: .
      target: dvlp_base-build-volumes
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-test
    entrypoint: /bin/bash -c
    command:
      - tail -F /dev/null
    # command:
    #   - tail
    #   - -f
    #   - /dev/null
    # command: ["tail", "-f", "/dev/null"]
    volumes:
      - repo_agl:/repos/dvlw
      - repo_agl:/r00t/dvlw
      - repo_agl:/home/r00t/dvlw
      - repo_agl:/hal/dvlw
      - repo_agl:/home/${_AGL}/dvlw
      - repo_dvl:/hel/dvlw
      - repo_dvl:/home/${_DVL}/dvlw
      - mnt-data:/mnt/data
      - home_agl:/hal
      - home_agl:/home/${_AGL}
      - home_dvl:/hel
      - home_dvl:/home/${_DVL}
      - home_r00t:/r00t
      - home_r00t:/home/r00t
      - dls:/dls  
  repo-build:
    command: apt-get update -y && apt-get upgrade -y
    build:
      context: .
      target: dvlp_build-repo-git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:repo-build
  repo:
    build:
      context: .
      target: dvlp_repo
      no_cache: true
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:repo
    entrypoint: /bin/bash -c echo 'helloworld'
    command:
      - echo 'helloworld'
    env_file:
      - .env
    volumes:
      - repo_agl:/repos/dvlw
      - repo_agl:/r00t/dvlw
      - repo_agl:/home/r00t/dvlw
      - repo_agl:/hal/dvlw
      - repo_agl:/home/${_AGL}/dvlw
      - repo_dvl:/hel/dvlw
      - repo_dvl:/home/${_DVL}/dvlw
  repo-kernel:
    extends: repo
    build:
      target: dvlp_repo-kernel
      no_cache: true
  r00t:
    build:
      target: dvlp_base-built-r00t-volumes
  angel:
    build:
      target: dvlp_base-built-angel-volumes
  devel:
    build:
      target: dvlp_base-built-devel-volumes
  skel:
    init: true
    # command:
    #   - /bin/bash -c apt-get update -y 
    #   - /bin/bash -c apt-get upgrade -y
    restart: on-failure
    build:
      target: dvlp_base-skel
      context: .
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-skel
    # command: apt-get update -y && apt-get upgrade -y && tail -F > /dev/null
    environment:
      - WIN_USER=$USERNAME
    env_file:
      - .env
    cap_add:
      - AUDIT_WRITE
      - SYS_CHROOT
      - CHOWN
      - DAC_OVERRIDE
      - FSETID
      - FOWNER
      - MKNOD
      - NET_RAW
      - SETGID
      - SETUID
      - SETFCAP
      - SETPCAP
      - NET_BIND_SERVICE
  vols:
    extends: skel
    tty: false
    init: true
    entrypoint: /bin/bash -c echo 'helloworld entry'
    command:
      - /bin/bash -c echo 'helloworld command'
    build:
      target: dvlp_base-build-volumes
    volumes:
      - repo_agl:/repos/dvlw
      - repo_agl:/r00t/dvlw
      - repo_agl:/home/r00t/dvlw
      - repo_agl:/hal/dvlw
      - repo_agl:/home/${_AGL}/dvlw
      - repo_dvl:/hel/dvlw
      - repo_dvl:/home/${_DVL}/dvlw
      - mnt-data:/mnt/data
      - home_agl:/hal
      - home_agl:/home/${_AGL}
      - home_dvl:/hel
      - home_dvl:/home/${_DVL}
      - home_r00t:/r00t
      - home_r00t:/home/r00t
      - dls:/dls 
  vols-kernel:
    extends: vols
    build:
      target: dvlp_base-build-kernel-volumes
    volumes_from: 
      - vols
    volumes:
      - repo_agl-kernel:/repos/dvlw/dvlp/kernels
      - repo_agl-kernel:/r00t/dvlw/dvlp/kernels
      - repo_agl-kernel:/home/r00t/dvlw/dvlp/kernels
      - repo_agl-kernel:/hal/dvlw/dvlp/kernels
      - repo_agl-kernel:/home/${_AGL}/dvlw/dvlp/kernels
      - repo_dvl-kernel:/hel/dvlw/dvlp/kernels
      - repo_dvl-kernel:/home/${_DVL}/dvlw/dvlp/kernels
  build:
    extends: vols
    tty: false
    build:
      target: dvlp_base-build
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-build
    depends_on:
      skel:
        # Wait for the ownership to change
        condition: service_completed_successfully
      vols:
        # Wait for the ownership to change
        condition: service_started
    labels:
      com.dvlp_base.description: "-build skeleton"
    volumes_from:
      - vols
  build-kernel:
    extends: vols-kernel
    tty: false
    build:
      target: dvlp_base-build-kernel
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-build-kernel
    depends_on:
      skel:
        # Wait for the ownership to change
        condition: service_completed_successfully
      vols-kernel:
        # Wait for the ownership to change
        condition: service_started
    labels:
      com.dvlp_base.description: "-build skeleton"
    volumes_from:
      - vols-kernel
  make-kernel:
    extends: vols-kernel
    entrypoint: /bin/bash -c echo 'helloworld'
    command:
      - tail -F /dev/null
    build:
      context: .
      target: dvlp_make-kernel
      no_cache: false
      args:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=zfs
    environment:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=zfs
      - CONFIG_FILE=${CONFIG_FILE}
    # entrypoint: /bin/bash  [ ! -f build-export-kernel.sh ] || bash build-export-kernel.sh "${KERNEL_TYPE}" "${CONFIG_FILE}" "${KERNEL_FEATURE}" "${WIN_USER}" "${DOCKER_BUILD_TIMESTAMP}"
    depends_on:
      skel:
        # Wait for the ownership to change
        condition: service_started
      vols-kernel:
        # Wait for the ownership to change
        condition: service_started
    volumes_from:
      - vols-kernel
  make-kernel-cached:
    extends: make-kernel
    build:
      context: .
      target: dvlp_make-kernel
      no_cache: false
    depends_on:
      skel:
        # Wait for the ownership to change
        condition: service_started
      vols-kernel:
        # Wait for the ownership to change
        condition: service_started
    volumes_from:
      - vols-kernel
  make-kernel-basic:
    extends: make-kernel
    build:
      target: dvlp_make-kernel
      args:
      - KERNEL_TYPE=basic
      - KERNEL_FEATURE=
    environment:
      - KERNEL_TYPE=basic
      - KERNEL_FEATURE=
  make-kernel-basic-zfs:
    extends: make-kernel
    build:
      target: dvlp_make-kernel
      args:
      - KERNEL_TYPE=basic
      - KERNEL_FEATURE=zfs
    environment:
      - KERNEL_TYPE=basic
      - KERNEL_FEATURE=zfs
  make-kernel-stable:
    extends: make-kernel
    build:
      target: dvlp_make-kernel
      args:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=
    environment:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=
  make-kernel-stable-zfs:
    extends: make-kernel
    build:
      target: dvlp_make-kernel
      args:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=zfs
    environment:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=zfs
  make-kernel-latest-zfs:
    extends: make-kernel
    build:
      target: dvlp_make-kernel
      args:
      - KERNEL_TYPE=latest
      - KERNEL_FEATURE=zfs
    environment:
      - KERNEL_TYPE=latest
      - KERNEL_FEATURE=zfs
  make-kernel-latest:
    extends: make-kernel
    build:
      target: dvlp_make-kernel
      args:
      - KERNEL_TYPE=latest
      - KERNEL_FEATURE=
    environment:
      - KERNEL_TYPE=latest
      - KERNEL_FEATURE=
  made-kernel:
    extends: make-kernel
    build:
      target: dvlp_made-kernel
    entrypoint: /bin/bash -c echo 'helloworld entry'
    command:
      - /bin/bash -c echo 'helloworld command'
    depends_on:
      skel:
        # Wait for the ownership to change
        condition: service_started
      vols-kernel:
        # Wait for the ownership to change
        condition: service_started
    volumes_from:
      - vols-kernel
        
  made-kernel-cached:
    extends: made-kernel
    build:
      context: .
      target: dvlp_made-kernel
      no_cache: false
    depends_on:
      skel:
        # Wait for the ownership to change
        condition: service_started
      vols-kernel:
        # Wait for the ownership to change
        condition: service_started
    volumes_from:
      - vols-kernel
    # depends_on:
    #   made-kernel:
    #     # Wait for the ownership to change
    #     condition: service_completed_successfully 
    # alias(es) for agl
    # base-ausr:
    #   user: ${_DVL_USR}
    #   extends: base-angel
    #   build:
    #     context: .
    #     target: dvlp_base-angel-volumes
    #     args:
    #       - _AGL=${_AGL:-agl}
    #   volumes:
    #     - home_agl:/home/${_AGL_USR}
    #   init: true
    # # alias(es) for dvl
    # base-daus:
    #   user: ${_DVL_USR}
    #   extends: init-dvl
    #   build:
    #     context: .
    #     target: dvlp_base-devel-volumes
    #     args:
    #       - _DVL_USR=${_DVL-:devel}
    #   volumes:
    #     - home_dvl:/home/$_DVL_USR

  # base-build-kernel:
  #   extends: base-skel
  #   tty: false
  #   build:
  #     target: dvlp_base-kernel

    # depends_on:
    #   base:
    #     # Wait for the ownership to change
    #     condition: service_completed_successfully

    # labels:
    #   com.dvlp_base-kernel.description: "-build skeleton"
  # base-kernel:
  #   user: ${_AGL}
  #   extends: dvlp_base-build-kernel
  #   working_dir: /hal
  #   cap_add:
  #     - AUDIT_WRITE
  #     - SYS_CHROOT
  #     - CHOWN
  #     - DAC_OVERRIDE
  #     - FSETID
  #     - FOWNER
  #     - MKNOD
  #     - NET_RAW
  #     - SETGID
  #     - SETUID
  #     - SETFCAP
  #     - SETPCAP
  #     - NET_BIND_SERVICE
  #   build:
  #     target: dvlp_base-kernel
  #     # args:
  #     #   - nix_bind_nix_src_user_dir=${LOGNAME:+/home/$LOGNAME}
  #     #   - nix_bind_win_src_user_dir=${USERNAME:+/mnt/c/users/$USERNAME}
  #     #   - win_bind_tgt_user_dir_r00t=${USERNAME:+/r00t/host_win}
  #     #   #  - win_bind_tgt_user_dir_g0d=${USERNAME:+/g0d/host_win}
  #     #   - win_bind_tgt_user_dir_agl=${USERNAME:+/halo/host_win}
  #     #   - win_bind_tgt_user_dir_dvl=${USERNAME:+/hell/host_win}:ro
  #     #   - nix_bind_tgt_user_dir_r00t=${LOGNAME:+/r00t/host_nix}
  #     #   #  - nix_bind_tgt_user_dir_g0d=${LOGNAME:+/g0d/host_nix}
  #     #   - nix_bind_tgt_user_dir_agl=${LOGNAME:+/halo/host_nix}
  #     #   - nix_bind_tgt_user_dir_dvl=${LOGNAME:+/hell/host_nix}:ro
  #     # #  - bind_src_dir=${bind_win_src_user_dir:-/dev/null}

  #   volumes:
  #     - repo_agl-kernel:/repos/dvlw
  #     - repo_agl-kernel:/r00t/dvlw
  #     - repo_agl-kernel:/home/r00t/dvlw
  #     - repo_agl-kernel:/hal/dvlw
  #     - repo_agl-kernel:/home/${_AGL}/dvlw
  #     - repo_dvl-kernel:/hel/dvlw
  #     - repo_dvl-kernel:/home/${_DVL}/dvlw
  #     - mnt-data:/mnt/data
  #     - home_agl:/hal
  #     - home_agl:/home/${_AGL}
  #     - home_dvl:/hel
  #     - home_dvl:/home/${_DVL}
  #     - home_r00t:/r00t
  #     - home_r00t:/home/r00t
  #     - dls:/dls
  #     # - ${nix_bind_win_src_user_dir:-/dev/foo1/null}:${win_bind_tgt_user_dir_r00t:-/dev/bar1/null}
  #     # # - ${nix_bind_win_src_user_dir:-/dev/foo2/null}:${win_bind_tgt_user_dir_g0d:-/dev/bar2/null}
  #     # - ${nix_bind_win_src_user_dir:-/dev/foo3/null}:${win_bind_tgt_user_dir_agl:-/dev/bar3/null}
  #     # - ${nix_bind_win_src_user_dir:-/dev/foo4/null}:${win_bind_tgt_user_dir_dvl:-/dev/bar4/null}
  #     # - ${nix_bind_nix_src_user_dir:-/dev/foo5/null}:${nix_bind_tgt_user_dir_r00t:-/dev/bar5/null}
  #     # # - ${nix_bind_nix_src_user_dir:-/dev/foo6/null}:${nix_bind_tgt_user_dir_g0d:-/dev/bar6/null}
  #     # - ${nix_bind_nix_src_user_dir:-/dev/foo7/null}:${nix_bind_tgt_user_dir_agl:-/dev/bar7/null}
  #     # - ${nix_bind_nix_src_user_dir:-/dev/foo8/null}:${nix_bind_tgt_user_dir_dvl:-/dev/bar8/null}
  #   depends_on:
  #     dvlp_base-build-kernel:
  #       # Wait for the ownership to change
  #       condition: service_completed_successfully
  #   labels:
  #     com.dvlp_base-kernel.description: "skeleton"
  base:
    extends: skel
    tty: true
    entrypoint: /bin/bash -c echo 'helloworld entry'
    command:
      - /bin/bash -c echo 'helloworld command'
    expose:
      - "3390"
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-base
    build:
      target: dvlp_base   
      args:
        - _AGL=${_AGL:-agl}
        - _DVL=${_DVL:-dvl}
    # entrypoint: /bin/bash -c 
    # command:
    #   - tail -F /dev/null
    depends_on:
      vols:
        # Wait for the ownership to change
        condition: service_started
      vols-kernel:
        # Wait for the ownership to change
        condition: service_started
      skel:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.dvlp_base.description: "-build skeleton"
    volumes_from:
      - vols
  base-kernel:
    extends:
      base
    volumes_from:
      - vols-kernel
      # args:
      #   - nix_bind_nix_src_user_dir=${LOGNAME:+/home/$LOGNAME}
      #   - nix_bind_win_src_user_dir=${USERNAME:+/mnt/c/users/$USERNAME}
      #   - win_bind_tgt_user_dir_r00t=${USERNAME:+/r00t/host_win}
      #   #  - win_bind_tgt_user_dir_g0d=${USERNAME:+/g0d/host_win}
      #   - win_bind_tgt_user_dir_agl=${USERNAME:+/halo/host_win}
      #   - win_bind_tgt_user_dir_dvl=${USERNAME:+/hell/host_win}:ro
      #   - nix_bind_tgt_user_dir_r00t=${LOGNAME:+/r00t/host_nix}
      #   #  - nix_bind_tgt_user_dir_g0d=${LOGNAME:+/g0d/host_nix}
      #   - nix_bind_tgt_user_dir_agl=${LOGNAME:+/halo/host_nix}
      #   - nix_bind_tgt_user_dir_dvl=${LOGNAME:+/hell/host_nix}:ro
      # #  - bind_src_dir=${bind_win_src_user_dir:-/dev/null}
    # volumes:
    #   - repo_agl:/repos/dvlw
    #   - repo_agl:/r00t/dvlw
    #   - repo_agl:/home/r00t/dvlw
    #   - repo_agl:/hal/dvlw
    #   - repo_agl:/home/${_AGL}/dvlw
    #   - repo_dvl:/hel/dvlw
    #   - repo_dvl:/home/${_DVL}/dvlw
    #   - mnt-data:/mnt/data
    #   - home_agl:/hal
    #   - home_agl:/home/${_AGL}
    #   - home_dvl:/hel
    #   - home_dvl:/home/${_DVL}
    #   - home_r00t:/r00t
    #   - home_r00t:/home/r00t
    #   - dls:/dls
      # - ${nix_bind_win_src_user_dir:-/dev/foo1/null}:${win_bind_tgt_user_dir_r00t:-/dev/bar1/null}
      # # - ${nix_bind_win_src_user_dir:-/dev/foo2/null}:${win_bind_tgt_user_dir_g0d:-/dev/bar2/null}
      # - ${nix_bind_win_src_user_dir:-/dev/foo3/null}:${win_bind_tgt_user_dir_agl:-/dev/bar3/null}
      # - ${nix_bind_win_src_user_dir:-/dev/foo4/null}:${win_bind_tgt_user_dir_dvl:-/dev/bar4/null}
      # - ${nix_bind_nix_src_user_dir:-/dev/foo5/null}:${nix_bind_tgt_user_dir_r00t:-/dev/bar5/null}
      # # - ${nix_bind_nix_src_user_dir:-/dev/foo6/null}:${nix_bind_tgt_user_dir_g0d:-/dev/bar6/null}
      # - ${nix_bind_nix_src_user_dir:-/dev/foo7/null}:${nix_bind_tgt_user_dir_agl:-/dev/bar7/null}
      # - ${nix_bind_nix_src_user_dir:-/dev/foo8/null}:${nix_bind_tgt_user_dir_dvl:-/dev/bar8/null}

  bare:
    entrypoint: /bin/bash -c 
    command:
      - tail -F /dev/null
    extends: base    # extends: kernel
    build:
      context: .
      target: dvlp_bare
    depends_on:
      base:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"
    volumes_from:
      - base
    volumes: 
      - win_c:/mnt/c
      - win_n:/mnt/n
      - mnt-data:/mnt/data
  git:
    extends: bare
    build:
      target: dvlp_git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-git${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
    labels:
      com.devels-playground.description: "basics + git"
    depends_on:
      base:
        # Wait for the ownership to change
        condition: service_started
    env_file:
      - .env
    volumes:
      - home_agl:/mnt/n/hal
      - home_dvl:/mnt/n/hel
  git-kernel:
    extends: bare
    entrypoint: /bin/bash -c
    command:
      - tail -F /dev/null
    restart: on-failure
    tty: true
    # entrypoint: /bin/bash -c
    # command:  ["bash -i chroot --userspec=dvl:dvl /fs"]
    privileged: true
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-git-kernel
    build:
      target: dvlp_git
      args:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=zfs
    environment:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=zfs
    depends_on:
      base-kernel: 
        condition: service_completed_successfully
      make-kernel:
        condition: service_completed_successfully
    volumes_from:
      - vols-kernel
  # scan-build:
  #   entrypoint: /bin/bash -c
  #   command:
  #     - sleep infinity
  #   # user: ${_AGL}
  #   extends: base
  #   working_dir: /hal
  #   restart: on-failure
  #   tty: true
  #   privileged: true
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-scan-build${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   # extends: kernel
  #   build:
  #     context: .
  #     target: dvlp_scan-build
  #   depends_on:
  #     base:
  #       # Wait for the ownership to change
  #       condition: service_completed_successfully
  #   labels:
  #     com.devels-playground.description: "basics + git"

  scan:
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
    # user: ${_AGL}
    # extends: scan-build
    privileged: true
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-scan${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
    # extends: kernel
    build:
      context: .
      target: dvlp_base-scan
    # depends_on:
    #   scan-build:
    #     # Wait for the ownership to change
    #     condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"

  # python-build-lite:
  #   extends: build
  #   build:
  #     context: .
  #     target: dvlp_python-build-lite

  #   labels:
  #     com.devels-playground.description: "basics + git"
  # python-build:
  #   extends: build
  #   build:
  #     context: .
  #     target: dvlp_python-build
  #   labels:
  #     com.devels-playground.description: "basics + git"
  #   depends_on:
  #     python-build-lite:
  #       # Wait for the ownership to change
  #       condition: service_started
  python-lite:
    extends: git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-python-lite${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
    build:
      context: .
      target: dvlp_python
    # depends_on:
    #   python-build-lite:
    #     # Wait for the ownership to change
    #     condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  python:
    extends: git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-python${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
    build:
      context: .
      target: dvlp_python
    # depends_on:
    #   python-build:
    #     # Wait for the ownership to change
    #     condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  python-kernel:
    extends: git-kernel
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-python-kernel
    build:
      target: dvlp_python
    # depends_on:
    #   python-build:
    #     # Wait for the ownership to change
    #     condition: service_started
      # python:
      #   # Wait for the ownership to change
      #   condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  msdot-lite:
    extends: git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-msdot-lite${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
    build:
      context: .
      target: dvlp_msdot-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell"
  msdot:
    extends: git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-msdot${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
    build:
      context: .
      target: dvlp_msdot
    labels:
      com.devels-playground.description: "basics + git + powerhell"
  dind:
    extends: git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-dind-kernel
    build:
      context: .
      target: dvlp_dind
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker"
  dind-kernel:
    extends: git-kernel
    build:
      target: dvlp_dind
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-dind-kernel'
    # depends_on:
    #   dind:
    #     condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  dind-lite:
    extends: git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-dind-lite${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
    build:
      context: .
      target: dvlp_dind-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  dind-lite-kernel:
    extends: git-kernel
    build:
      target: dvlp_dind-lite
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-dind-lite-kernel
    # depends_on:
    #   dind-lite:
    #     condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  kernel-builder:
    extends: git-kernel
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kernel-builder
    build:
      context: .
      target: dvlp_kernel-builder
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  gui-lite:
    extends: git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
    build:
      context: .
      target: dvlp_gui-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  gui-lite-kernel:
    extends: git-kernel
    build:
      target: dvlp_gui-lite
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui-lite-kernel
    # depends_on:
    #   gui-lite:
    #     condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  gui:
    extends: git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
    # user: ${_AGL}
    # entrypoint:
    #   - /bin/bash
    #   - -c
    #   - bash /home/${_DVL}/start-kde.sh
    # entrypoint: /bin/bash -c
    # command: bash /home/${_AGL}/start-kde.sh
    build:
      context: .
      target: dvlp_gui
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  # gui-kernel:
  #   extends: git-kernel
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui-kernel${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   labels:
  #     com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  gui-kernel:
    extends: git-kernel
    build:
      target: dvlp_gui
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui-kernel
    # depends_on:
    #   gui:
    #     condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  cuda:
    extends: git
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-cuda${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
    build:
      context: .
      target: dvlp_cuda
      labels:
        com.devels-playground.description: "basics + git + powerhell + docker + gui + cuda"
  cuda-kernel:
    extends: git-kernel
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-cuda-kernel
    depends_on:
      cuda:
        condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  # cuda-kernel:
  #   extends: gui-kernel
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-cuda-kernel
  #   build:
  #     context: .
  #     target: dvlp_cuda-kernel
  #     labels:
  #       com.devels-playground.description: "basics + git + powerhell + docker + gui + cuda"

  # jacket:
  #   user: ${_AGL}
  #   working_dir: /hal
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-${JACKET:-bare}
  #   entrypoint: /bin/bash -c
  #   command:
  #     - sleep infinity
  #   build:
  #     context: .
  #     target: dvlp_jacket-kernel-${JACKET:-bare}
  #     args:
  #       - JACKET=bare
  #       - _AGL=${_AGL:-agl}
  #       - _DVL=${_DVL_USR:-$_DVL}
  #       - _MNT=${_MNT_USR:-$_MNT}
  #     labels:
  #       com.devels-playground.description: "hello jacket-kernel"
  #   env_file:
  #     - .env
  #   volumes:
  #     - repo_agl-kernel:/repos/dvlw
  #     - repo_agl-kernel:/r00t/dvlw
  #     - repo_agl-kernel:/home/r00t/dvlw
  #     - repo_agl-kernel:/hal/dvlw
  #     - repo_agl-kernel:/home/${_AGL}/dvlw
  #     - repo_dvl-kernel:/hel/dvlw
  #     - repo_dvl-kernel:/home/${_DVL}/dvlw
  #     - mnt-data:${_MNT}
  #     - home_r00t:/r00t
  #     - home_r00t:/home/r00t
  #     - home_agl:/hal
  #     - home_agl:/home/${_AGL}
  #     - home_dvl:/hel
  #     - home_dvl:/home/${_DVL}
  #     - dls:/dls
  #   depends_on:
  #     base:
  #       condition: service_completed_successfully
  # jacket:
  #   user: ${_AGL}
  #   working_dir: /hal
  #   volumes:
  #     - repo_agl:/repos/dvlw
  #     - repo_agl:/r00t/dvlw
  #     - repo_agl:/home/r00t/dvlw
  #     - repo_agl:/hal/dvlw
  #     - repo_agl:/home/${_AGL}/dvlw
  #     - repo_dvl:/hel/dvlw
  #     - repo_dvl:/home/${_DVL}/dvlw
  #     - mnt-data:${_MNT}
  #     - home_r00t:/r00t
  #     - home_r00t:/home/r00t
  #     - home_agl:/hal
  #     - home_agl:/home/${_AGL}
  #     - home_dvl:/hel
  #     - home_dvl:/home/${_DVL}
  #     - dls:/dls

  # base-bare:
  #   extends: jacket
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-bare${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   build:
  #     target: dvlp_bare
  #     args:
  #       - JACKET=bare
  # make-kernel:
  #   extends: jacket
  #   build:
  #     target: dvlp_make-kernel
  #     no_cache: true
  #     args:
  #       - JACKET=make-kernel
  #   entrypoint: /bin/bash -c
  #   command: 
  #   - sleep infinity
    # command: "if [ -f 'start-kde.sh'' ]; then bash start.sh; fi; && sleep infinity;"
    # - "if [ -f \"start-kde.sh\" ]; then bash start.sh; mv -vf start-kde.sh start.sh; else bash start.sh; fi; && sleep infinity;"
    # - ["if [ -f \"start-kde.sh\" ]; then bash start.sh; mv -vf start-kde.sh start.sh; else bash start.sh; fi;", "sleep infinity"]
    # image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-make-kernel

  # base-git:
  #   extends: jacket
  #   user: ${_AGL}
  #   working_dir: /hal
  #   # entrypoint: /bin/bash -c
  #   # command: "if [ -f \"start-kde.sh\" ]; then bash start.sh; fi; && sleep infinity;"
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-git${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   build:
  #     target: dvlp_git
  #     args:
  #       - JACKET=git
  # git-kernel:
  #   extends: jacket-kernel
  #   entrypoint: /bin/bash -c
  #   # command: 
  #   # - sleep infinity
  #   # command: "if [ -f 'start-kde.sh'' ]; then bash start.sh; fi; && sleep infinity;"
  #   # - "if [ -f \"start-kde.sh\" ]; then bash start.sh; mv -vf start-kde.sh start.sh; else bash start.sh; fi; && sleep infinity;"
  #   # - ["if [ -f \"start-kde.sh\" ]; then bash start.sh; mv -vf start-kde.sh start.sh; else bash start.sh; fi;", "sleep infinity"]
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-git-kernel
  #   build:
  #     target: dvlp_git-kernel
  #     args:
  #       - JACKET=git-kernel

  # base-scan:
  #   extends: jacket
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-scan${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   build:
  #     target: dvlp_scan
  #     args:
  #       - JACKET=scan
  # base-python-lite:
  #   extends: jacket
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-python-lite${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   build:
  #     target: dvlp_python-lite
  #     args:
  #       - JACKET=python-lite
  # base-dind-lite:
  #   extends: jacket
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-dind-lite${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   build:
  #     target: dvlp_dind-lite
  #     args:
  #       - JACKET=dind-lite
  # base-msdot-lite:
  #   extends: jacket
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-msdot-lite${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   build:
  #     target: dvlp_msdot-lite
  #     args:
  #       - JACKET=msdot-lite
  # gui-lite-kernel:
  #   working_dir: /hal
  #   extends: jacket-kernel
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui-lite-kernel${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   # command: bash start-kde.sh
  #   build:
  #     target: dvlp_gui-lite-kernel
  #     args:
  #       - JACKET=gui-lite-kernel
  # base-gui-lite:
  #   extends: jacket
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui-lite${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   # command: bash start.sh && mv -fv start-kde.sh || export FIRST_LOGIN=false
  #   build:
  #     target: dvlp_gui-lite
  #     args:
  #       - JACKET=gui-lite
  # gui-kernel:
  #   working_dir: /hal
  #   extends: jacket-kernel
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui-kernel${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   # command: bash start-kde.sh
  #   build:
  #     target: dvlp_gui-kernel
  #     args:
  #       - JACKET=gui-kernel
  # base-gui:
  #   extends: jacket
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   # command: bash start-kde.sh
  #   build:
  #     target: dvlp_gui
  #     args:
  #       - JACKET=gui
  #   volumes_from:
  #     - jacket
  # base-cuda:
  #   extends: gui
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-cuda${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   # command: bash start-kde.sh
  #   build:
  #     target: dvlp_cuda
  #     args:
  #       - JACKET=cuda
  #   volumes_from:
  #     - jacket
  # cuda-kernel:
  #   extends: cuda
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-cuda-kernel${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$_ARCH}${KERNEL_TYPE:+--}${KERNEL_TYPE:+-$_ARCH_VENDOR}
  #   # command: bash start-kde.sh
  #   build:
  #     target: dvlp_cuda-kernel
  #     args:
  #       - JACKET=cuda-kernel
  #   volumes_from:
  #     - jacket-kernel

volumes:
  root:
  root_dvl:
  root_agl:
  root_r00t:

  mnt-data:

  dls: # dls_dvl:

  # dls_agl:
  # dls_r00t:

  home_dvl:
  home_agl:
  home_r00t:

  repo_agl:
  repo_agl-kernel:
  repo_dvl:
  repo_dvl-kernel:
  repo_r00t:

  host_win:
  host_nix:
  win_c:
  win_n:
    # host_mac:

# networks:
#   "${COMPOSE_PROJECT_NAME}_default":
#     driver: overlay
#     attachable: true
