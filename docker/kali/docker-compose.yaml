version: "3.9"
name: devels-playground-kali
services:
  build-template:
    tty: false
    build:
      context: .
      target: dvlp_testing
      args:
      - _AGL=${_AGL:-agl}
      - _DVL=${_DVL:-dvl}
      - _ARCH=${_ARCH}
      - _ARCH_VENDOR=${_ARCH_VENDOR}
      - __ARCH__VENDOR=${__ARCH__VENDOR}
      - DOCKER_HUB_IMG=${HUB_IMG}
      - DOCKER_HUB_REPO=${HUB_REPO}
    env_file:
      - .env
    environment:
      - _AGL=${_AGL:-agl}
      - _DVL=${_DVL:-dvl}
      - _ARCH=${_ARCH}
      - _ARCH_VENDOR=${_ARCH_VENDOR}
      - __ARCH__VENDOR=${__ARCH__VENDOR}
      - DOCKER_HUB_IMG=${HUB_IMG}
      - DOCKER_HUB_REPO=${HUB_REPO}
    restart: on-failure
    cap_add:
      - AUDIT_WRITE
      - SYS_CHROOT
      - CHOWN
      - DAC_OVERRIDE
      - FSETID
      - FOWNER
      - MKNOD
      - NET_RAW
      - SETGID
      - SETUID
      - SETFCAP
      - SETPCAP
      - NET_BIND_SERVICE

  base-template:
    extends: build-template
    entrypoint: /bin/bash -c
    command:
      - tail -F /dev/null
    expose:
      - "3390"
    tty: true
    privileged: true
    volumes:
      - win_c:/mnt/c
      - win_n:/mnt/n
      - mnt-data:/mnt/data
      - home_agl:/mnt/n/hal
      - home_dvl:/mnt/n/hel
      
  base-kernel-template:
    extends: base-template
    entrypoint: /bin/bash -c
    command:
      - tail -F /dev/null
    build:
      context: .
    volumes_from:
      - base-template

  build-repo-builder:
    # command: /bin/bash -c apt-get update -y && apt-get upgrade -y
    extends: build-template
    build:
      context: .
      target: dvlp_repo-builder

  # build-repo-image-builder:
  #   extends: build-repo-builder
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:repo-builder
  #   depends_on:
  #     build-repo-builder:
  #       condition: service_completed_successfully

  # repo-image-builder:
  #   extends: build-repo-image-builder
  #   build:
  #     context: ""
  #     target: ""

  repo-builder:
    extends: build-repo-builder
    build:
      context: .
      target: dvlp_build-repo
      no_cache: true
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:repo
    entrypoint: /bin/bash -c echo 'helloworld'
    command:
      - echo 'helloworld'
    volumes:
      - repo_agl:/repos/dvlw

  repo-kernel-builder:
    extends: repo-builder
    build:
      target: dvlp_build-repo-kernel
    volumes_from:
      - repo-builder
    volumes:
      - repo_agl-kernel:/repos/dvlw/dvlp/kernels
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:repo-kernel

  get-kernel:
    build:
      context: .
      target: dvlp_get-kernel

  build-r00t:
    build:
      target: dvlp_base-r00t-volumes-built
    env_file:
      - .env

  build-angel:
    build:
      target: dvlp_base-angel-volumes-built
    env_file:
      - .env

  build-devel:
    build:
      target: dvlp_base-devel-volumes-built
    env_file:
      - .env

  build-vols:
    extends: build-template
    tty: true
    init: true
    entrypoint: /bin/bash -c echo 'helloworld entry'
    command:
      - /bin/bash -c echo 'helloworld command'
    build:
      target: dvlp_base-volumes-builder
      no_cache: true

  build-vols-kernel:
    extends: build-vols
    build:
      target: dvlp_base-kernel-volumes-builder
      no_cache: true
    # depends_on:
    #   build-vols:
    #     condition: service_completed_successfully

  vols:
    extends: build-template
    user: 'r00t'
    working_dir: /repos/dvlw
    build:
      target: dvlp_base-builder
    entrypoint: /bin/bash -c
    command:
      - tail -F /dev/null
    depends_on:
      build-vols:
        condition: service_completed_successfully
    healthcheck:
      # test: /bin/bash -c 'git status --porcelain > /dev/null' || exit 1
      test: /bin/bash -c '[ -e ".git" ] || exit 1'
      start_period: 5s
      start_interval: 1s
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - repo_agl:/repos/dvlw
      - repo_agl:/r00t/dvlw
      # - repo_agl:/home/r00t/dvlw
      - repo_agl:/hal/dvlw
      # - repo_agl:/home/${_AGL}/dvlw
      # - repo_dvl:/hel/dvlw
      # - repo_dvl:/home/${_DVL}/dvlw
      - mnt-data:/mnt/data
      - home_agl:/hal
      - home_agl:/home/${_AGL}
      - home_dvl:/hel
      # - home_dvl:/home/${_DVL}
      - home_r00t:/r00t
      # - home_r00t:/home/r00t
      - dls:/dls

  vols-kernel:
    extends: vols
    build:
      target: dvlp_base-kernel-builder
    depends_on:
      build-vols-kernel:
        condition: service_completed_successfully
    volumes_from:
      - vols
    volumes:
    #   - repo_agl-kernel:/repos/dvlw/dvlp/kernels
    #   # - repo_agl-kernel:/r00t/dvlw/dvlp/kernels
    #   # - repo_agl-kernel:/home/r00t/dvlw/dvlp/kernels
      - repo_agl-kernel:/hal/dvlw/dvlp/kernels
    #   - repo_agl-kernel:/home/${_AGL}/dvlw/dvlp/kernels
    #   - repo_dvl-kernel:/hel/dvlw/dvlp/kernels
    #   - repo_dvl-kernel:/home/${_DVL}/dvlw/dvlp/kernels


  build-skel:
    init: true
    extends: build-template
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-skel
    build:
      target: dvlp_base-skel
      # no_cache: true
    # depends_on:
    #   build-vols:
    #     condition: service_completed_successfully
    #   build-vols-kernel:
    #     condition: service_completed_successfully

  build-skel-image:
    extends: build-skel
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-skel
    # depends_on:
    #   skel-image:
    #     condition: service_completed_successfully

  # skel-image:
  #   extends: build-template
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-skel

    # depends_on:
    #   build-skel-image:
    #     condition: service_completed_successfully

  build-k-home-win:
    build:
      target: dvlp_k-home-win
      no_cache: true
    env_file:
      - .env

  build-k-home-nix:
    extends: build-k-home-win
    build:
      target: dvlp_k-home-nix-angel

  build-k-home-nix-angel:
    extends: build-k-home-nix

  build-k-home-nix-devel:
    extends: build-k-home-nix
    build:
      target: dvlp_k-home-nix-devel

  build-k-home-nix-r00t:
    extends: build-k-home-nix
    build:
      target: dvlp_k-home-nix-r00t

  build-base-builder:
    extends: build-skel
    build:
      target: dvlp_base-builder
    depends_on:
      # build-skel:
      #   condition: service_completed_successfully
      build-vols:
        condition: service_completed_successfully
      vols:
        condition: service_healthy
    volumes_from:
      - vols

  build-base-kernel-builder:
    extends: build-skel
    build:
      target: dvlp_base-kernel-builder
    depends_on:
      # build-skel:
      #   condition: service_completed_successfully
      build-vols-kernel:
        condition: service_completed_successfully
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - vols-kernel

  make-kernel:
    extends: build-base-kernel-builder
    entrypoint: /bin/bash -c echo 'helloworld'
    # entrypoint: /bin/bash  [ ! -f build-export-kernel.sh ] || bash build-export-kernel.sh "${KERNEL_TYPE}" "${CONFIG_FILE}" "${KERNEL_FEATURE}" "${DOCKER_BUILD_TIMESTAMP}"
    command:
      - /bin/bash -c echo 'helloworld'
    build:
      context: .
      target: dvlp_base-kernel
      no_cache: false
      args:
        - KERNEL_TYPE=stable
        - KERNEL_FEATURE=zfs
    environment:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=zfs
      - CONFIG_FILE=${CONFIG_FILE}
    depends_on:
      build-base-kernel-builder:
        condition: service_completed_successfully
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - build-base-kernel-builder

  make-kernel-cached:
    extends: make-kernel
    build:
      context: .
      target: dvlp_base-kernel
      no_cache: false
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - make-kernel

  make-kernel-basic:
    extends: make-kernel
    build:
      target: dvlp_base-kernel
      args:
        - KERNEL_TYPE=basic
        - KERNEL_FEATURE=
    environment:
      - KERNEL_TYPE=basic
      - KERNEL_FEATURE=
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - make-kernel

  make-kernel-basic-zfs:
    extends: make-kernel
    build:
      target: dvlp_base-kernel
      args:
        - KERNEL_TYPE=basic
        - KERNEL_FEATURE=zfs
    environment:
      - KERNEL_TYPE=basic
      - KERNEL_FEATURE=zfs
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - make-kernel

  make-kernel-stable:
    extends: make-kernel
    build:
      target: dvlp_base-kernel
      args:
        - KERNEL_TYPE=stable
        - KERNEL_FEATURE=
    environment:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - make-kernel

  make-kernel-stable-zfs:
    extends: make-kernel
    build:
      target: dvlp_base-kernel
      args:
        - KERNEL_TYPE=stable
        - KERNEL_FEATURE=zfs
    environment:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=zfs
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - make-kernel

  make-kernel-latest-zfs:
    extends: make-kernel
    build:
      target: dvlp_base-kernel
      args:
        - KERNEL_TYPE=latest
        - KERNEL_FEATURE=zfs
    environment:
      - KERNEL_TYPE=latest
      - KERNEL_FEATURE=zfs
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - make-kernel

  make-kernel-latest:
    extends: make-kernel
    build:
      target: dvlp_base-kernel
      args:
        - KERNEL_TYPE=latest
        - KERNEL_FEATURE=
    environment:
      - KERNEL_TYPE=latest
      - KERNEL_FEATURE=
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - make-kernel

  # made-kernel:
  #   extends: make-kernel
  #   build:
  #     target: dvlp_made-kernel
  #   entrypoint: /bin/bash -c echo 'helloworld entry'
  #   command:
  #     - /bin/bash -c echo 'helloworld command'
  #   depends_on:
  #     make-kernel:
  #       condition: service_completed_successfully
  #     vols-kernel:
  #       condition: service_healthy
  #   volumes_from:
  #     - vols-kernel

  # made-kernel-cached:
  #   extends: made-kernel
  #   build:
  #     context: .
  #     target: dvlp_made-kernel
  #     no_cache: false
  #   depends_on:
  #     make-kernel:
  #       condition: service_completed_successfully
  #     vols-kernel:
  #       condition: service_healthy
  #   volumes_from:
  #     - vols-kernel

  build-base:
    extends: base-template
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-base
    build:
      target: dvlp_base
    entrypoint: /bin/bash -c echo 'helloworld'
    command:
      - /bin/bash -c echo 'helloworld'
    depends_on:
      vols:
        condition: service_healthy
    volumes_from:
      - vols
      - base-template

  build-base-kernel:
    extends: base-kernel-template
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-base-kernel
    build:
      target: dvlp_base-kernel
    entrypoint: /bin/bash -c echo 'helloworld'
    command:
      - /bin/bash -c echo 'helloworld'
    depends_on:
      make-kernel:
        condition: service_completed_successfully
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - vols-kernel
      - base-kernel-template
      
  cli:
    extends: base-template
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-cli${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}
    build:
      target: dvlp_cli
    depends_on:
      vols:
        condition: service_healthy
      build-base:
        condition: service_completed_successfully
    volumes_from:
      - vols
      - base-template

  cli-kernel:
    extends: base-kernel-template
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-cli${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}
    build:
      target: dvlp_cli
      args:
        - KERNEL_TYPE=stable
        - KERNEL_FEATURE=zfs
    environment:
      - KERNEL_TYPE=stable
      - KERNEL_FEATURE=zfs
    depends_on:
      vols-kernel:
        condition: service_healthy
      make-kernel:
        condition: service_completed_successfully
    volumes_from:
      - vols-kernel
      - base-kernel-template

  # build-scan:
  #   entrypoint: /bin/bash -c
  #   command:
  #     - sleep infinity
  #   # user: ${_AGL}
  #   extends: build-base
  #   working_dir: /hal
  #   restart: on-failure
  #   tty: true
  #   privileged: true
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-scan-build${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}
  #   # extends: kernel
  #   build:
  #     context: .
  #     target: dvlp_scan-build
  #   depends_on:
  #     build-base:
  #       condition: service_completed_successfully
  #   labels:
  #     com.devels-playground.description: "basics + git"

  scan:
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
    # user: ${_AGL}
    # extends: scan-build
    privileged: true
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-scan${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}
    build:
      context: .
      target: dvlp_base-scan
    labels:
      com.devels-playground.description: "basics + git"

  cli-goodies:
    extends: cli
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-cli${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}-goodies
    build:
      context: .
      target: dvlp_cli-goodies
    depends_on:
      vols:
        condition: service_healthy
    volumes_from:
      - cli

  cli-kernel-goodies:
    extends: cli-kernel
    build:
      target: dvlp_cli-goodies
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-cli${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}-goodies
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - cli-kernel

  # cli-goodies-lite:
  #   extends: cli
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-dind-lite${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}
  #   build:
  #     context: .
  #     target: dvlp_cli-goodies-lite
  #   labels:
  #     com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  # cli-goodies-lite-kernel:
  #   extends: cli-kernel
  #   build:
  #     target: dvlp_cli-goodies-lite
  #   image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-dind-lite${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}
  # depends_on:
  #   cli-goodies-lite:
  #     condition: service_completed_successfully
  # labels:
  #   com.devels-playground.description: "basics + git"

  gui:
    extends: cli
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}
    build:
      target: dvlp_gui
    depends_on:
      vols:
        condition: service_healthy
    volumes_from:
      - cli

  gui-kernel:
    extends: cli-kernel
    build:
      target: dvlp_gui
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - cli-kernel

  gui-goodies:
    extends: gui
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}-goodies
    build:
      context: .
      target: dvlp_gui-goodies
    depends_on:
      vols:
        condition: service_healthy
    volumes_from:
      - gui


  gui-kernel-goodies:
    extends: cli-kernel-goodies
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui-kernel${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}-goodies
    build:
      target: dvlp_gui-goodies
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - cli-kernel-goodies

  gui-goodies-cuda:
    extends: gui-goodies
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui-goodies-cuda${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}
    build:
      target: dvlp_gui-goodies-cuda
    depends_on:
      vols:
        condition: service_healthy
    volumes_from:
      - gui-goodies

  gui-goodies-cuda-kernel:
    extends: gui-kernel-goodies
    image: ${HUB_REPO:-kindtek}/${HUB_IMG:-devels-playground}:kali-gui-goodies-cuda-kernel${KERNEL_TYPE:+-kernel}${KERNEL_TYPE:+-$__ARCH__VENDOR}
    build:
      target: dvlp_gui-cuda-goodies
    depends_on:
      vols-kernel:
        condition: service_healthy
    volumes_from:
      - gui-kernel-goodies

volumes:
  root:
  root_dvl:
  root_agl:
  root_r00t:

  mnt-data:

  dls: 
  # dls_dvl:
  # dls_agl:
  # dls_r00t:

  home_dvl:
  home_agl:
  home_r00t:

  repo_agl:
  repo_agl-kernel:
  repo_dvl:
  repo_dvl-kernel:
  repo_r00t:
  
  host_mac:
  host_win:
  host_nix:
  win_c:
  win_n:
# networks:
#   "${COMPOSE_PROJECT_NAME}_default":
#     driver: overlay
#     attachable: true
