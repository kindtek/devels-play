version: "3.9"
name: devels-playground-kali
services:
  test:
    build:
      target: dvlp_testing
    image: kindtek/${HUB_REPO:-devels-playground}:kali-test
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
  repo:
    build:
      target: dvlp_repo
    # volumes:
    #   - repo:/repos/dvlw
  repo-kernel:
    build:
      target: dvlp_repo-kernel
    # volumes:
    #   - repo-kernel:/repos/dvlw
  base:
    build:
      target: dvlp_base
      context: .
      args:
        - _AGL=${_AGL_USR:-$_AGL}
        - _DVL=${_DVL_USR:-$_DVL}
        - _MNT=${_MNT:-/mnt/data}
        - CONFIG_FILE
    env_file:
      - .env
    # volumes:
    #   - dls:/dls
    init: true
  base-r00t:
    extends: base
    build:
      target: dvlp_base-r00t-dirs
  base-angel:
    extends: base
    build:
      target: dvlp_base-angel-dirs
  base-devel:
    extends: base
    build:
      target: dvlp_base-devel-dirs
    # alias(es) for agl
    # base-ausr:
    #   user: ${_DVL_USR}
    #   extends: base-angel
    #   build:
    #     context: .
    #     target: dvlp_base-angel-dirs
    #     args:
    #       - _AGL=${_AGL_USR:-$_AGL}
    #   volumes:
    #     - home_agl:/home/${_AGL_USR}
    #   init: true
    # # alias(es) for dvl
    # base-daus:
    #   user: ${_DVL_USR}
    #   extends: init-dvl
    #   build:
    #     context: .
    #     target: dvlp_base-devel-dirs
    #     args:
    #       - _DVL_USR=${_DVL-:devel}
    #   volumes:
    #     - home_dvl:/home/$_DVL_USR

  skel-build:
    extends: base
    tty: false
    build:
      target: dvlp_skel-build
    depends_on:
      base:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.dvlp_skel-kernel.description: "-build skeleton"

  skel-build-kernel:
    extends: base
    tty: false
    build:
      target: dvlp_skel-build-kernel

    depends_on:
      base:
        # Wait for the ownership to change
        condition: service_completed_successfully

    labels:
      com.dvlp_skel-kernel.description: "-build skeleton"
  skel-kernel:
    user: ${_AGL}
    extends: skel-build-kernel
    working_dir: /hal
    cap_add:
      - AUDIT_WRITE
      - SYS_CHROOT
      - CHOWN
      - DAC_OVERRIDE
      - FSETID
      - FOWNER
      - MKNOD
      - NET_RAW
      - SETGID
      - SETUID
      - SETFCAP
      - SETPCAP
      - NET_BIND_SERVICE
    build:
      target: dvlp_skel-kernel
      # args:
      #   - nix_bind_nix_src_user_dir=${LOGNAME:+/home/$LOGNAME}
      #   - nix_bind_win_src_user_dir=${USERNAME:+/mnt/c/users/$USERNAME}
      #   - win_bind_tgt_user_dir_r00t=${USERNAME:+/r00t/host_win}
      #   #  - win_bind_tgt_user_dir_g0d=${USERNAME:+/g0d/host_win}
      #   - win_bind_tgt_user_dir_agl=${USERNAME:+/halo/host_win}
      #   - win_bind_tgt_user_dir_dvl=${USERNAME:+/hell/host_win}:ro
      #   - nix_bind_tgt_user_dir_r00t=${LOGNAME:+/r00t/host_nix}
      #   #  - nix_bind_tgt_user_dir_g0d=${LOGNAME:+/g0d/host_nix}
      #   - nix_bind_tgt_user_dir_agl=${LOGNAME:+/halo/host_nix}
      #   - nix_bind_tgt_user_dir_dvl=${LOGNAME:+/hell/host_nix}:ro
      # #  - bind_src_dir=${bind_win_src_user_dir:-/dev/null}

    volumes:
      - repo_agl-kernel:/repos/dvlw
      - repo_agl-kernel:/r00t/dvlw
      - repo_agl-kernel:/home/r00t/dvlw
      - repo_agl-kernel:/hal/dvlw
      - repo_agl-kernel:/home/${_AGL}/dvlw
      - repo_dvl-kernel:/hel/dvlw
      - repo_dvl-kernel:/home/${_DVL}/dvlw
      - mnt-data:/mnt/data
      - home_agl:/hal
      - home_agl:/home/${_AGL}
      - home_dvl:/hel
      - home_dvl:/home/${_DVL}
      - home_r00t:/r00t
      - home_r00t:/home/r00t
      - dls:/dls
      # - ${nix_bind_win_src_user_dir:-/dev/foo1/null}:${win_bind_tgt_user_dir_r00t:-/dev/bar1/null}
      # # - ${nix_bind_win_src_user_dir:-/dev/foo2/null}:${win_bind_tgt_user_dir_g0d:-/dev/bar2/null}
      # - ${nix_bind_win_src_user_dir:-/dev/foo3/null}:${win_bind_tgt_user_dir_agl:-/dev/bar3/null}
      # - ${nix_bind_win_src_user_dir:-/dev/foo4/null}:${win_bind_tgt_user_dir_dvl:-/dev/bar4/null}
      # - ${nix_bind_nix_src_user_dir:-/dev/foo5/null}:${nix_bind_tgt_user_dir_r00t:-/dev/bar5/null}
      # # - ${nix_bind_nix_src_user_dir:-/dev/foo6/null}:${nix_bind_tgt_user_dir_g0d:-/dev/bar6/null}
      # - ${nix_bind_nix_src_user_dir:-/dev/foo7/null}:${nix_bind_tgt_user_dir_agl:-/dev/bar7/null}
      # - ${nix_bind_nix_src_user_dir:-/dev/foo8/null}:${nix_bind_tgt_user_dir_dvl:-/dev/bar8/null}
    depends_on:
      skel-build-kernel:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.dvlp_skel-kernel.description: "skeleton"

  skel:
    user: ${_AGL}
    extends: skel-build
    working_dir: /hal
    cap_add:
      - AUDIT_WRITE
      - SYS_CHROOT
      - CHOWN
      - DAC_OVERRIDE
      - FSETID
      - FOWNER
      - MKNOD
      - NET_RAW
      - SETGID
      - SETUID
      - SETFCAP
      - SETPCAP
      - NET_BIND_SERVICE
    build:
      target: dvlp_skel
      # args:
      #   - nix_bind_nix_src_user_dir=${LOGNAME:+/home/$LOGNAME}
      #   - nix_bind_win_src_user_dir=${USERNAME:+/mnt/c/users/$USERNAME}
      #   - win_bind_tgt_user_dir_r00t=${USERNAME:+/r00t/host_win}
      #   #  - win_bind_tgt_user_dir_g0d=${USERNAME:+/g0d/host_win}
      #   - win_bind_tgt_user_dir_agl=${USERNAME:+/halo/host_win}
      #   - win_bind_tgt_user_dir_dvl=${USERNAME:+/hell/host_win}:ro
      #   - nix_bind_tgt_user_dir_r00t=${LOGNAME:+/r00t/host_nix}
      #   #  - nix_bind_tgt_user_dir_g0d=${LOGNAME:+/g0d/host_nix}
      #   - nix_bind_tgt_user_dir_agl=${LOGNAME:+/halo/host_nix}
      #   - nix_bind_tgt_user_dir_dvl=${LOGNAME:+/hell/host_nix}:ro
      # #  - bind_src_dir=${bind_win_src_user_dir:-/dev/null}
    volumes:
      - repo_agl:/repos/dvlw
      - repo_agl:/r00t/dvlw
      - repo_agl:/home/r00t/dvlw
      - repo_agl:/hal/dvlw
      - repo_agl:/home/${_AGL}/dvlw
      - repo_dvl:/hel/dvlw
      - repo_dvl:/home/${_DVL}/dvlw
      - mnt-data:/mnt/data
      - home_agl:/hal
      - home_agl:/home/${_AGL}
      - home_dvl:/hel
      - home_dvl:/home/${_DVL}
      - home_r00t:/r00t
      - home_r00t:/home/r00t
      - dls:/dls
      # - ${nix_bind_win_src_user_dir:-/dev/foo1/null}:${win_bind_tgt_user_dir_r00t:-/dev/bar1/null}
      # # - ${nix_bind_win_src_user_dir:-/dev/foo2/null}:${win_bind_tgt_user_dir_g0d:-/dev/bar2/null}
      # - ${nix_bind_win_src_user_dir:-/dev/foo3/null}:${win_bind_tgt_user_dir_agl:-/dev/bar3/null}
      # - ${nix_bind_win_src_user_dir:-/dev/foo4/null}:${win_bind_tgt_user_dir_dvl:-/dev/bar4/null}
      # - ${nix_bind_nix_src_user_dir:-/dev/foo5/null}:${nix_bind_tgt_user_dir_r00t:-/dev/bar5/null}
      # # - ${nix_bind_nix_src_user_dir:-/dev/foo6/null}:${nix_bind_tgt_user_dir_g0d:-/dev/bar6/null}
      # - ${nix_bind_nix_src_user_dir:-/dev/foo7/null}:${nix_bind_tgt_user_dir_agl:-/dev/bar7/null}
      # - ${nix_bind_nix_src_user_dir:-/dev/foo8/null}:${nix_bind_tgt_user_dir_dvl:-/dev/bar8/null}
    depends_on:
      skel-build:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.dvlp_skel-kernel.description: "skeleton"

  base-bare:
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
    # user: ${_AGL}
    extends: skel-build
    working_dir: /hal
    restart: on-failure
    tty: true
    # entrypoint: /bin/bash -c
    # command:  ["bash -i chroot --userspec=dvl:dvl /fs"]
    privileged: true
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-bare
    # extends: skel-kernel
    build:
      context: .
      target: dvlp_base-bare
    depends_on:
      skel-build:
        # Wait for the ownership to change
        condition: service_completed_successfully
    init: true
    labels:
      com.devels-playground.description: "basics + git"
  base-git:
    extends: base-bare
    build:
      context: .
      target: dvlp_base-git
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-git
    labels:
      com.devels-playground.description: "basics + git"

  base-git-kernel:
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
    # user: ${_AGL}
    extends: skel-kernel
    working_dir: /hal
    restart: on-failure
    tty: true
    privileged: true
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-git-kernel
    # extends: skel-kernel
    build:
      context: .
      target: dvlp_base-git-kernel
    depends_on:
      skel-kernel:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"

  base-scan-build:
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
    # user: ${_AGL}
    extends: skel
    working_dir: /hal
    restart: on-failure
    tty: true
    privileged: true
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-scan-build
    # extends: skel-kernel
    build:
      context: .
      target: dvlp_base-scan-build
    depends_on:
      skel:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"

  base-scan:
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
    # user: ${_AGL}
    extends: base-scan-build
    privileged: true
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-scan
    # extends: skel-kernel
    build:
      context: .
      target: dvlp_base-scan
    # depends_on:
    #   base-scan-build:
    #     # Wait for the ownership to change
    #     condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"

  base-python-build:
    extends: skel-build
    build:
      context: .
      target: dvlp_base-python-build
    labels:
      com.devels-playground.description: "basics + git"
  base-python-build-lite:
    extends: skel-build
    build:
      context: .
      target: dvlp_base-python-build-lite
    depends_on:
      base-python-build:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"
  base-python-lite:
    extends: base-git
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-py-lite
    build:
      context: .
      target: dvlp_base-python-lite
    depends_on:
      base-python-build:
        # Wait for the ownership to change
        condition: service_started
    labels:
      com.devels-playground.description: "basics + git"
  base-python:
    extends: base-git
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-py
    build:
      context: .
      target: dvlp_base-python
    depends_on:
      base-python-build:
        # Wait for the ownership to change
        condition: service_completed_successfully
    labels:
      com.devels-playground.description: "basics + git"
  base-msdot-lite:
    extends: base-git
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-msdot-lite
    build:
      context: .
      target: dvlp_base-msdot-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell"
  base-msdot:
    extends: base-git
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-msdot
    build:
      context: .
      target: dvlp_base-msdot
    labels:
      com.devels-playground.description: "basics + git + powerhell"
  base-dind:
    extends: base-git
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-dind
    build:
      context: .
      target: dvlp_base-dind
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker"
  base-dind-lite:
    extends: base-git
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-dind-lite
    build:
      context: .
      target: dvlp_base-dind-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  base-kernel-builder:
    extends: base-git-kernel
    image: kindtek/${HUB_REPO:-devels-playground}:kernel-builder
    build:
      context: .
      target: dvlp_base-kernel-builder
      # args:
      #   - CONFIG_FILE=${CONFIG_FILE:-dvlw/dvlp/kernels/linux/x86/generic/.config_wsl0}
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel"
  base-gui-lite:
    extends: base-git
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-gui
    build:
      context: .
      target: dvlp_base-gui-lite
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  base-gui:
    extends: base-git
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-gui
    # user: ${_AGL}
    # entrypoint:
    #   - /bin/bash
    #   - -c
    #   - bash /home/${_DVL}/start-kde.sh
    # entrypoint: /bin/bash -c
    # command: bash /home/${_AGL}/start-kde.sh
    build:
      context: .
      target: dvlp_base-gui
      args:
        - _AGL=${_AGL_USR:-$_AGL}
        - _DVL=${_DVL_USR:-$_DVL}
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  base-gui-kernel:
    extends: base-git-kernel
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-gui-kernel
    labels:
      com.devels-playground.description: "basics + git + powerhell + docker + kernel + gui"
  base-cuda:
    extends: base-gui
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-cuda
    build:
      context: .
      target: dvlp_base-cuda
      labels:
        com.devels-playground.description: "basics + git + powerhell + docker + gui + cuda"
  base-cuda-kernel:
    extends: base-gui-kernel
    image: kindtek/${HUB_REPO:-devels-playground}:kali-base-cuda-kernel
    build:
      context: .
      target: dvlp_base-cuda-kernel
      labels:
        com.devels-playground.description: "basics + git + powerhell + docker + gui + cuda"

  jacket-kernel:
    user: ${_AGL}
    working_dir: /hal
    image: kindtek/${HUB_REPO:-devels-playground}:kali-${JACKET:-bare}
    entrypoint: /bin/bash -c
    command:
      - sleep infinity
    build:
      context: .
      target: dvlp_jacket-kernel-${JACKET:-bare}
      args:
        - JACKET=bare
        - _AGL=${_AGL_USR:-$_AGL}
        - _DVL=${_DVL_USR:-$_DVL}
        - _MNT=${_MNT_USR:-$_MNT}
      labels:
        com.devels-playground.description: "hello jacket-kernel"
    volumes:
      - repo_agl-kernel:/repos/dvlw
      - repo_agl-kernel:/r00t/dvlw
      - repo_agl-kernel:/home/r00t/dvlw
      - repo_agl-kernel:/hal/dvlw
      - repo_agl-kernel:/home/${_AGL}/dvlw
      - repo_dvl-kernel:/hel/dvlw
      - repo_dvl-kernel:/home/${_DVL}/dvlw
      - mnt-data:${_MNT}
      - home_r00t:/r00t
      - home_r00t:/home/r00t
      - home_agl:/hal
      - home_agl:/home/${_AGL}
      - home_dvl:/hel
      - home_dvl:/home/${_DVL}
      - dls:/dls
    # depends_on:
    #   jacket-kernel-skel-kernel:
    #     condition: service_completed_successfully
  jacket:
    user: ${_AGL}
    working_dir: /hal
    extends: jacket-kernel
    volumes:
      - repo_agl:/repos/dvlw
      - repo_agl:/r00t/dvlw
      - repo_agl:/home/r00t/dvlw
      - repo_agl:/hal/dvlw
      - repo_agl:/home/${_AGL}/dvlw
      - repo_dvl:/hel/dvlw
      - repo_dvl:/home/${_DVL}/dvlw
      - mnt-data:${_MNT}
      - home_r00t:/r00t
      - home_r00t:/home/r00t
      - home_agl:/hal
      - home_agl:/home/${_AGL}
      - home_dvl:/hel
      - home_dvl:/home/${_DVL}
      - dls:/dls

  bare:
    extends: jacket
    image: kindtek/${HUB_REPO:-devels-playground}:kali-bare
    build:
      target: dvlp_bare
      args:
        - JACKET=bare
  kernel-make:
    extends: jacket-kernel
    entrypoint: /bin/bash -c
    command: 
    - sleep infinity
    # command: "if [ -f 'start-kde.sh'' ]; then bash start.sh; fi; && sleep infinity;"
    # - "if [ -f \"start-kde.sh\" ]; then bash start.sh; mv -vf start-kde.sh start.sh; else bash start.sh; fi; && sleep infinity;"
    # - ["if [ -f \"start-kde.sh\" ]; then bash start.sh; mv -vf start-kde.sh start.sh; else bash start.sh; fi;", "sleep infinity"]
    # image: kindtek/${HUB_REPO:-devels-playground}:kali-kernel-make
    build:
      target: dvlp_kernel-make
      args:
        - JACKET=kernel-make
  git:
    extends: jacket
    user: ${_AGL}
    working_dir: /hal
    # entrypoint: /bin/bash -c
    # command: "if [ -f \"start-kde.sh\" ]; then bash start.sh; fi; && sleep infinity;"
    image: kindtek/${HUB_REPO:-devels-playground}:kali-git
    build:
      target: dvlp_git
      args:
        - JACKET=git
  git-kernel:
    extends: jacket-kernel
    entrypoint: /bin/bash -c
    # command: 
    # - sleep infinity
    # command: "if [ -f 'start-kde.sh'' ]; then bash start.sh; fi; && sleep infinity;"
    # - "if [ -f \"start-kde.sh\" ]; then bash start.sh; mv -vf start-kde.sh start.sh; else bash start.sh; fi; && sleep infinity;"
    # - ["if [ -f \"start-kde.sh\" ]; then bash start.sh; mv -vf start-kde.sh start.sh; else bash start.sh; fi;", "sleep infinity"]
    image: kindtek/${HUB_REPO:-devels-playground}:kali-git-kernel
    build:
      target: dvlp_git-kernel
      args:
        - JACKET=git-kernel

  scan:
    extends: jacket
    image: kindtek/${HUB_REPO:-devels-playground}:kali-scan
    build:
      target: dvlp_scan
      args:
        - JACKET=scan
  python-lite:
    extends: jacket
    image: kindtek/${HUB_REPO:-devels-playground}:kali-python-lite
    build:
      target: dvlp_python-lite
      args:
        - JACKET=python-lite
  dind-lite:
    extends: jacket
    image: kindtek/${HUB_REPO:-devels-playground}:kali-dind-lite
    build:
      target: dvlp_dind-lite
      args:
        - JACKET=dind-lite
  msdot-lite:
    extends: jacket
    image: kindtek/${HUB_REPO:-devels-playground}:kali-msdot-lite
    build:
      target: dvlp_msdot-lite
      args:
        - JACKET=msdot-lite
  gui-lite:
    extends: jacket
    image: kindtek/${HUB_REPO:-devels-playground}:kali-gui-lite
    # command: bash start.sh && mv -fv start-kde.sh || export FIRST_LOGIN=false
    build:
      target: dvlp_gui-lite
      args:
        - JACKET=gui-lite
  gui-kernel:
    working_dir: /hal
    extends: jacket-kernel
    image: kindtek/${HUB_REPO:-devels-playground}:kali-gui-kernel
    # command: bash start-kde.sh
    build:
      target: dvlp_gui-kernel
      args:
        - JACKET=gui-kernel
  gui:
    extends: gui-kernel
    image: kindtek/${HUB_REPO:-devels-playground}:kali-gui
    # command: bash start-kde.sh
    build:
      target: dvlp_gui
      args:
        - JACKET=gui
    volumes_from:
      - jacket
  cuda:
    extends: gui-kernel
    image: kindtek/${HUB_REPO:-devels-playground}:kali-cuda
    # command: bash start-kde.sh
    build:
      target: dvlp_cuda
      args:
        - JACKET=cuda
    volumes_from:
      - jacket
  cuda-kernel:
    extends: cuda
    image: kindtek/${HUB_REPO:-devels-playground}:kali-cuda-kernel
    # command: bash start-kde.sh
    build:
      target: dvlp_cuda-kernel
      args:
        - JACKET=cuda-kernel
    volumes_from:
      - jacket-kernel

volumes:
  root:
  root_dvl:
  root_agl:
  root_r00t:

  mnt-data:

  dls: # dls_dvl:

  # dls_agl:
  # dls_r00t:

  home_dvl:
  home_agl:
  home_r00t:

  repo_agl:
  repo_agl-kernel:
  repo_dvl:
  repo_dvl-kernel:
  repo_r00t:

  world_hell:
  world_halo:
  world_r00t:
  world_old_hell:
  world_old_halo:
  world_old_r00t:

  host_win:
  host_nix:
    # host_mac:

# networks:
#   "${COMPOSE_PROJECT_NAME}_default":
#     driver: overlay
#     attachable: true
